{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emers\\\\OneDrive\\\\Desktop\\\\projeto\\\\Front-Futebol\\\\src\\\\componentes\\\\login\\\\artilheiro_torneio.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react'; /*eslint-disable*/\nimport '../../css/login/artilheiro.css';\nimport { Button, Image, Form, InputGroup, FormControl, Col, Carousel, Alert } from 'react-bootstrap';\nimport { apiC } from \"../../conexoes/api\";\nimport BootstrapTable from 'react-bootstrap-table-next';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ArtilheiroTorneio() {\n  _s();\n  const [nomeJogador, setNomeJogador] = useState('');\n  const [quantidadeGol, setQuantidadeGol] = useState(0);\n  const [nomeJogadorAnterior, setNomeJogadorAnterior] = useState('');\n  const [quantidadeGolAnterior, setQuantidadeGolAnterior] = useState(0);\n  const [carregando, setCarregando] = useState(false);\n  const [mensagem, setMensagem] = useState('');\n  const [mensagemTabela, setMensagemTabela] = useState('');\n  const [itens, setItens] = useState([]);\n  const [somaGols, setSomaGols] = useState([]);\n  const navigate = useNavigate();\n  let token = JSON.parse(localStorage.getItem(\"keyToken\"));\n  let totalItens = 0;\n  let contador = 0;\n  let itensVar = [];\n  let dadosSelecionados = [];\n  useEffect(() => {\n    async function autenticar(e) {\n      await apiC.post(\"autenticacao/autenticar\").then(response => {\n        console.log(\"esta autenticado\");\n      }).catch(error => {\n        if (error.response.data === 'não autenticado') {\n          navigate('/');\n        }\n      });\n    }\n    setTimeout(autenticar, 5000);\n  }, []);\n  useEffect(() => {\n    inserirData();\n  }, []);\n  async function inserirData() {\n    let somaTotalGols = 0;\n    setMensagemTabela('Inserindo na tabela..');\n    await apiC.post(\"artilheiro/buscar/torneio\", {}).then(response => {\n      if (response.status === 200) {\n        for (let i = 0; i < response.data.length; i++) {\n          if (contador === i) {\n            let k = i;\n            for (let j = 0; j < response.data.length; j++) {\n              itensVar[k] = response.data[j];\n              k++;\n              somaTotalGols += parseInt(response.data[j].gols, 10);\n            }\n          }\n          setSomaGols(somaTotalGols);\n          setItens(JSON.parse(JSON.stringify(itensVar)));\n        }\n      }\n      setMensagemTabela('Feito! Tabela Atualizada');\n      setCarregando(false);\n    }).catch(error => {\n      setMensagemTabela('erro ao atualizar tabela');\n      alert('erro ao atualizar tabela');\n      setCarregando(false);\n    });\n  }\n  async function atualizaNumeroGol(item) {\n    let quantidadeGolNum = parseInt(quantidadeGol, 10);\n    setMensagem('atualizando..');\n    await apiC.put(\"artilheiro/atualiza\", {\n      \"id\": item[0].id,\n      \"nome\": item[0].nome,\n      \"gols\": item[0].gols + quantidadeGolNum,\n      headers: {\n        'x-access-token': token\n      }\n    }).then(response => {\n      if (response.status === 200) {\n        setMensagem('atualizado!');\n        setNomeJogadorAnterior(item[0].nome);\n        setQuantidadeGolAnterior(quantidadeGolNum);\n        inserirData();\n      }\n      setCarregando(false);\n    }).catch(error => {\n      setMensagem('erro ao atualizar');\n      alert('erro ao atualizar');\n      setCarregando(false);\n    });\n  }\n  async function inserirNovoJogador() {\n    let quantidadeGolNum = parseInt(quantidadeGol, 10);\n    // const verificar = verificaString()\n    // if(verificar){\n    setMensagem('Inserindo novo nome..');\n    await apiC.post(\"artilheiro/inserir\", {\n      \"nome\": nomeJogador,\n      \"gols\": quantidadeGolNum\n    }).then(response => {\n      if (response.status === 200) {\n        setMensagem('Novo nome inserido!');\n        setNomeJogadorAnterior(nomeJogador);\n        setQuantidadeGolAnterior(quantidadeGolNum);\n        inserirData();\n      }\n      setCarregando(false);\n    }).catch(error => {\n      setMensagem('erro ao inserir novo nome');\n      alert(error.response.data);\n      setCarregando(false);\n    });\n    // }else{\n    //     alert('Nome não cadastrado, por favor verifique')\n    // }\n  }\n\n  async function handleDeletar() {\n    setMensagem('Deletando..');\n    for (let i = 0; i < dadosSelecionados.length; i++) {\n      await apiC.post(\"artilheiro/delete/torneio\", {\n        \"id\": dadosSelecionados[i]\n      }).then(response => {\n        if (response.status === 200) {\n          setMensagem('Jogador deletado');\n          inserirData();\n        }\n        setCarregando(false);\n      }).catch(error => {\n        setMensagem('erro ao deletar jogador');\n        alert('erro ao deletar jogador');\n        setCarregando(false);\n      });\n    }\n  }\n  async function handleSalvar() {\n    setCarregando(true);\n    setMensagem('salvando..');\n    await apiC.post(\"artilheiro/nome\", {\n      \"nome\": nomeJogador\n    }).then(response => {\n      if (response.status === 200) {\n        if (response.data.length > 0) {\n          atualizaNumeroGol(response.data);\n        } else {\n          inserirNovoJogador();\n        }\n      }\n      setCarregando(false);\n    }).catch(error => {\n      setMensagem('erro ao salvar');\n      setCarregando(false);\n    });\n  }\n\n  // const verificaString = () => {\n  //     return ['Cris', 'Axe', 'Super Homem', 'Hulk', 'Filipe', 'Wilham', 'Taylor', 'Maçaneta', 'Sundown', 'Theo', 'Buzz', 'Dony', 'Monstro', 'Controle da tv', 'Rivelino', 'Renan', 'Pente Cinza', 'Perna Longa', 'Raul', 'Sensodyni', 'Sabrina', 'Jhonsons', 'Cindy', 'Loriel', 'Ufe', 'Sr Incrivel', 'Lucas', 'Hammer', 'Livia', 'Rafael', 'Tiago', 'Rodrigo', 'Pente Laranja', 'Rildo', 'Pente Rosa', 'Net', 'Cristian', 'Pepe', 'Homem de Ferro', 'Vinicius', 'Lacan', 'Condicionador', 'Telefone', 'Rozinha', 'Coringa', 'Michel', 'Mostarda', 'Thanos', 'Pantene', 'Leonardo', 'Pente Preto', 'Tati', 'Pente Azul', 'Mathias', 'Azeite', 'Varicel', 'Titan', 'Eva', 'Hugo', 'Azuzinho', 'Rita', 'David', 'Azulão', 'Shampo', 'Orlof', 'Branquinho', 'Kevin', 'Crystal', 'Izakson', 'Sky', 'Gradiente', 'Escuro', 'Edson', 'Katchup', 'Luiza'].includes(nomeJogador)\n  // }\n\n  const colunas = [{\n    dataField: 'nome',\n    headerClasses: 'nao-selecionavel',\n    sort: true,\n    text: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Jogador\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 19\n    }, this),\n    formatter: (cell, row) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: cell === null ? '-' : cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 24\n      }, this);\n    }\n  }, {\n    headerClasses: 'nao-selecionavel',\n    text: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"-           -\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 19\n    }, this),\n    formatter: (cell, row) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: cell === null ? '-' : cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 24\n      }, this);\n    }\n  }, {\n    dataField: 'gols',\n    headerClasses: 'nao-selecionavel',\n    text: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Gols feitos\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 19\n    }, this),\n    formatter: (cell, row) => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: cell === null ? '-' : cell\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 24\n      }, this);\n    }\n  }];\n  function handleSelecionar(simcard) {\n    for (let i = 0; i < itens.length; i++) {\n      if (itens[i].id == simcard) {\n        dadosSelecionados.push(itens[i].id);\n        break;\n      }\n    }\n  }\n  function handleDesselecionar(simcard) {\n    for (let i = 0; i < dadosSelecionados.length; i++) {\n      if (dadosSelecionados[i] == simcard) {\n        dadosSelecionados.splice(i, 1);\n        break;\n      }\n    }\n  }\n  function handleDesselecionarTodos() {}\n  function handleSelecionarTodos() {\n    itens.map((item, i) => {\n      if (itens[i].id) {\n        dadosSelecionados.push(itens[i].id);\n      }\n    });\n  }\n  const selecaoLinhas = {\n    mode: 'checkbox',\n    onSelect: (row, isSelect, rowIndex, e) => {\n      if (isSelect) {\n        handleSelecionar(row.id);\n      } else {\n        handleDesselecionar(row.id);\n      }\n    },\n    onSelectAll: (isSelect, rows, e) => {\n      if (isSelect) {\n        handleSelecionarTodos();\n      } else {\n        handleDesselecionarTodos();\n      }\n    },\n    selectionRenderer: ({\n      mode,\n      ...rest\n    }) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: mode,\n          class: \"input-checkbox-simcard\",\n          ...rest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 270,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"label-checkbox-simcard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    },\n    selectionHeaderRenderer: ({\n      mode,\n      ...rest\n    }) => {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: mode,\n          class: \"input-checkbox-header-simcard\",\n          ...rest\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          class: \"label-checkbox-header-simcard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 279,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true);\n    },\n    bgColor: 'row-index-bigger-than-2101'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-filtro-arquivo\",\n      onClick: e => navigate('/home'),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 9\n    }, this), carregando && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"carregando..\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: mensagem\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n      children: mensagemTabela\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 299,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: nomeJogadorAnterior\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: quantidadeGolAnterior\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Nome do jogador\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"label-artilheiro\",\n        onChange: e => {\n          setNomeJogador(e.target.value);\n        },\n        value: nomeJogador\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Quantidade de gols\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"label-artilheiro\",\n        onChange: e => {\n          setQuantidadeGol(e.target.value);\n        },\n        value: quantidadeGol\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"label-quatidade\",\n        children: \"Quantidade total de gols marcados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 319,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"label-quantgol\",\n        value: somaGols\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"btn-filtro-arquivo\",\n      onClick: e => handleSalvar(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Enviar Arquivo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 325,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      className: \"deletar-jogador\",\n      onClick: e => handleDeletar(),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Deletar jogadores selecionados\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(BootstrapTable, {\n        hover: true,\n        classes: \"tabela\",\n        condensed: true,\n        keyField: \"id\",\n        data: itens,\n        columns: colunas,\n        selectRow: selecaoLinhas,\n        bootstrap4: true,\n        bordered: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 25\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n_s(ArtilheiroTorneio, \"p3PO5NJIra+9sZ9VlT011l3Bm+4=\", false, function () {\n  return [useNavigate];\n});\n_c = ArtilheiroTorneio;\nvar _c;\n$RefreshReg$(_c, \"ArtilheiroTorneio\");","map":{"version":3,"names":["React","useState","useEffect","Button","Image","Form","InputGroup","FormControl","Col","Carousel","Alert","apiC","BootstrapTable","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","ArtilheiroTorneio","_s","nomeJogador","setNomeJogador","quantidadeGol","setQuantidadeGol","nomeJogadorAnterior","setNomeJogadorAnterior","quantidadeGolAnterior","setQuantidadeGolAnterior","carregando","setCarregando","mensagem","setMensagem","mensagemTabela","setMensagemTabela","itens","setItens","somaGols","setSomaGols","navigate","token","JSON","parse","localStorage","getItem","totalItens","contador","itensVar","dadosSelecionados","autenticar","e","post","then","response","console","log","catch","error","data","setTimeout","inserirData","somaTotalGols","status","i","length","k","j","parseInt","gols","stringify","alert","atualizaNumeroGol","item","quantidadeGolNum","put","id","nome","headers","inserirNovoJogador","handleDeletar","handleSalvar","colunas","dataField","headerClasses","sort","text","children","fileName","_jsxFileName","lineNumber","columnNumber","formatter","cell","row","handleSelecionar","simcard","push","handleDesselecionar","splice","handleDesselecionarTodos","handleSelecionarTodos","map","selecaoLinhas","mode","onSelect","isSelect","rowIndex","onSelectAll","rows","selectionRenderer","rest","type","class","selectionHeaderRenderer","bgColor","className","onClick","Control","onChange","target","value","hover","classes","condensed","keyField","columns","selectRow","bootstrap4","bordered","_c","$RefreshReg$"],"sources":["C:/Users/emers/OneDrive/Desktop/projeto/Front-Futebol/src/componentes/login/artilheiro_torneio.js"],"sourcesContent":["import React, { useState, useEffect} from 'react';/*eslint-disable*/\r\nimport '../../css/login/artilheiro.css';\r\nimport { Button, Image, Form, InputGroup, FormControl, Col, Carousel, Alert } from 'react-bootstrap';\r\nimport { apiC } from \"../../conexoes/api\";\r\nimport BootstrapTable from 'react-bootstrap-table-next';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nexport default function ArtilheiroTorneio() {\r\n\r\n    const [nomeJogador, setNomeJogador] = useState('');\r\n    const [quantidadeGol, setQuantidadeGol] = useState(0);\r\n    const [nomeJogadorAnterior, setNomeJogadorAnterior] = useState('');\r\n    const [quantidadeGolAnterior, setQuantidadeGolAnterior] = useState(0);\r\n    const [carregando, setCarregando] = useState(false);\r\n    const [mensagem, setMensagem] = useState('');\r\n    const [mensagemTabela, setMensagemTabela] = useState('');\r\n    const [itens, setItens] = useState([]);\r\n    const [somaGols, setSomaGols] = useState([]);\r\n    const navigate = useNavigate();\r\n    let token = JSON.parse(localStorage.getItem(\"keyToken\"))\r\n    let totalItens = 0\r\n    let contador = 0\r\n    let itensVar = []\r\n    let dadosSelecionados = []\r\n    \r\n    useEffect(() => {\r\n        async function autenticar(e) {\r\n            await apiC.post(\"autenticacao/autenticar\")\r\n            .then(response => {\r\n      console.log(\"esta autenticado\")\r\n            })\r\n            .catch((error) => {\r\n                if(error.response.data === 'não autenticado'){\r\n                    navigate('/')\r\n                }\r\n            });\r\n        }\r\n        setTimeout(autenticar, 5000);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        inserirData()\r\n    }, [])\r\n\r\n\r\n    async function inserirData() {\r\n        let somaTotalGols = 0\r\n        setMensagemTabela('Inserindo na tabela..')\r\n        await apiC.post(\"artilheiro/buscar/torneio\", {\r\n        })   \r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    for (let i = 0; i < response.data.length; i++) {\r\n                        if (contador === i) {\r\n                            let k = i\r\n                            for (let j = 0; j < response.data.length; j++) {\r\n                                itensVar[k] = response.data[j]\r\n                                k++\r\n                                somaTotalGols += parseInt(response.data[j].gols, 10)\r\n                            }\r\n                        }\r\n                        setSomaGols(somaTotalGols)  \r\n                        setItens(JSON.parse(JSON.stringify(itensVar)))\r\n\r\n                    }\r\n                }\r\n                setMensagemTabela('Feito! Tabela Atualizada')\r\n                setCarregando(false)\r\n            })\r\n            .catch((error) => {\r\n                setMensagemTabela('erro ao atualizar tabela')\r\n                alert('erro ao atualizar tabela')\r\n                setCarregando(false)\r\n            });\r\n\r\n    }\r\n\r\n    async function atualizaNumeroGol(item) {\r\n      let quantidadeGolNum =  parseInt(quantidadeGol, 10)\r\n        setMensagem('atualizando..')\r\n\r\n        await apiC.put(\"artilheiro/atualiza\", {\r\n            \"id\": item[0].id,\r\n            \"nome\": item[0].nome,\r\n            \"gols\": item[0].gols + quantidadeGolNum,\r\n            headers: {\r\n                'x-access-token': token,\r\n            }\r\n        })\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    setMensagem('atualizado!')\r\n                    setNomeJogadorAnterior(item[0].nome)\r\n                    setQuantidadeGolAnterior(quantidadeGolNum)\r\n                    inserirData()\r\n                }\r\n                setCarregando(false)\r\n            })\r\n            .catch((error) => {\r\n                setMensagem('erro ao atualizar')\r\n                alert('erro ao atualizar')\r\n                setCarregando(false)\r\n            });\r\n\r\n    }\r\n\r\n    async function inserirNovoJogador() {\r\n        let quantidadeGolNum =  parseInt(quantidadeGol, 10)\r\n        // const verificar = verificaString()\r\n        // if(verificar){\r\n            setMensagem('Inserindo novo nome..')\r\n            await apiC.post(\"artilheiro/inserir\", {\r\n                \"nome\": nomeJogador,\r\n                \"gols\": quantidadeGolNum,\r\n            }).then(response => {\r\n                if (response.status === 200) {\r\n                    setMensagem('Novo nome inserido!')\r\n                    setNomeJogadorAnterior(nomeJogador)\r\n                    setQuantidadeGolAnterior(quantidadeGolNum)\r\n                    inserirData()\r\n                }\r\n                setCarregando(false)\r\n            })\r\n                .catch((error) => {\r\n                    setMensagem('erro ao inserir novo nome')\r\n                    alert(error.response.data)\r\n                    setCarregando(false)\r\n                });\r\n        // }else{\r\n        //     alert('Nome não cadastrado, por favor verifique')\r\n        // }\r\n    }\r\n\r\n    async function handleDeletar(){\r\n        setMensagem('Deletando..')\r\nfor(let i = 0; i < dadosSelecionados.length; i++){\r\n    await apiC.post(\"artilheiro/delete/torneio\", {\r\n        \"id\": dadosSelecionados[i],\r\n    })\r\n        .then(response => {\r\n            if (response.status === 200) {\r\n                setMensagem('Jogador deletado')\r\n                inserirData()\r\n            }\r\n            setCarregando(false)\r\n        })\r\n        .catch((error) => {\r\n            setMensagem('erro ao deletar jogador')\r\n            alert('erro ao deletar jogador')\r\n            setCarregando(false)\r\n        });\r\n}\r\n        \r\n\r\n    }\r\n\r\n    async function handleSalvar() {\r\n        setCarregando(true)\r\n        setMensagem('salvando..')\r\n        await apiC.post(\"artilheiro/nome\", {\r\n            \"nome\": nomeJogador,\r\n        })\r\n            .then(response => {\r\n                if (response.status === 200) {\r\n                    if (response.data.length > 0) {\r\n                        atualizaNumeroGol(response.data)\r\n                    } else {\r\n                        inserirNovoJogador()\r\n                    }\r\n                }\r\n                setCarregando(false)\r\n            })\r\n            .catch((error) => {\r\n                setMensagem('erro ao salvar')\r\n                setCarregando(false)\r\n            });\r\n\r\n    }\r\n\r\n    // const verificaString = () => {\r\n    //     return ['Cris', 'Axe', 'Super Homem', 'Hulk', 'Filipe', 'Wilham', 'Taylor', 'Maçaneta', 'Sundown', 'Theo', 'Buzz', 'Dony', 'Monstro', 'Controle da tv', 'Rivelino', 'Renan', 'Pente Cinza', 'Perna Longa', 'Raul', 'Sensodyni', 'Sabrina', 'Jhonsons', 'Cindy', 'Loriel', 'Ufe', 'Sr Incrivel', 'Lucas', 'Hammer', 'Livia', 'Rafael', 'Tiago', 'Rodrigo', 'Pente Laranja', 'Rildo', 'Pente Rosa', 'Net', 'Cristian', 'Pepe', 'Homem de Ferro', 'Vinicius', 'Lacan', 'Condicionador', 'Telefone', 'Rozinha', 'Coringa', 'Michel', 'Mostarda', 'Thanos', 'Pantene', 'Leonardo', 'Pente Preto', 'Tati', 'Pente Azul', 'Mathias', 'Azeite', 'Varicel', 'Titan', 'Eva', 'Hugo', 'Azuzinho', 'Rita', 'David', 'Azulão', 'Shampo', 'Orlof', 'Branquinho', 'Kevin', 'Crystal', 'Izakson', 'Sky', 'Gradiente', 'Escuro', 'Edson', 'Katchup', 'Luiza'].includes(nomeJogador)\r\n    // }\r\n\r\n    const colunas = [\r\n        {\r\n            dataField: 'nome',\r\n            headerClasses: 'nao-selecionavel',\r\n            sort: true,\r\n            text: <p>\r\n                Jogador\r\n            </p>,\r\n            formatter: (cell, row) => {\r\n                return <p>{cell === null ? '-' : cell}</p>;\r\n            },\r\n        },\r\n        {\r\n            headerClasses: 'nao-selecionavel',\r\n            text: <p>\r\n               -           -\r\n            </p>,\r\n            formatter: (cell, row) => {\r\n                return <p>{cell === null ? '-' : cell}</p>;\r\n            },\r\n        },\r\n        {\r\n            dataField: 'gols',\r\n            headerClasses: 'nao-selecionavel',\r\n            text: <p>\r\n                Gols feitos\r\n            </p>,\r\n            formatter: (cell, row) => {\r\n                return <p>{cell === null ? '-' : cell}</p>;\r\n            },\r\n        },\r\n\r\n    ]\r\n\r\n    \r\n    function handleSelecionar(simcard){\r\n        for (let i = 0; i < itens.length; i++) {\r\n            if (itens[i].id == simcard){\r\n                dadosSelecionados.push(itens[i].id);\r\n                break;\r\n            }\r\n    }\r\n    }\r\n\r\n\r\n    function handleDesselecionar(simcard){\r\n        for (let i = 0; i < dadosSelecionados.length; i++) {\r\n            if (dadosSelecionados[i] == simcard){\r\n                dadosSelecionados.splice(i, 1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    function handleDesselecionarTodos(){\r\n    }\r\n\r\n\r\n    function handleSelecionarTodos(){\r\n        itens.map((item,i)=>{\r\n            if(itens[i].id){\r\n                dadosSelecionados.push(itens[i].id);\r\n            }\r\n        })\r\n    }\r\n\r\n    const selecaoLinhas = {\r\n        mode: 'checkbox' ,\r\n        onSelect: (row, isSelect, rowIndex, e) => {\r\n            if(isSelect){\r\n                handleSelecionar(row.id)\r\n            }else{\r\n                handleDesselecionar(row.id)\r\n            }\r\n        },\r\n        onSelectAll: (isSelect, rows, e) => {\r\n            if(isSelect){\r\n                handleSelecionarTodos()\r\n            }else{\r\n                handleDesselecionarTodos()\r\n            }\r\n        },\r\n        selectionRenderer: ({ mode, ...rest }) => {\r\n            return (\r\n                <>\r\n                    <input type={mode} class=\"input-checkbox-simcard\" { ...rest }/>\r\n                    <label class=\"label-checkbox-simcard\"></label>\r\n                </>\r\n            )\r\n        },\r\n        selectionHeaderRenderer: ({ mode, ...rest }) => {\r\n            return (\r\n                <>\r\n                    <input type={mode} class=\"input-checkbox-header-simcard\" { ...rest }/>\r\n                    <label class=\"label-checkbox-header-simcard\"></label>\r\n                </>\r\n            )\r\n        },\r\n        bgColor: 'row-index-bigger-than-2101'\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n        <Button className=\"btn-filtro-arquivo\" onClick={(e) => navigate('/home')}>\r\n                        <div>Home</div>\r\n                    </Button>\r\n            {carregando &&\r\n                <h1>carregando..</h1>\r\n            }\r\n            {\r\n                <h4>{mensagem}</h4>   \r\n            }\r\n            {\r\n                <h4>{mensagemTabela}</h4>\r\n            }\r\n             {\r\n                <h2>{nomeJogadorAnterior}</h2>   \r\n            }\r\n            {\r\n                <h2>{quantidadeGolAnterior}</h2>   \r\n            }\r\n\r\n            <div>\r\n                <label>Nome do jogador</label>\r\n                <Form.Control className=\"label-artilheiro\"\r\n                    onChange={e => { setNomeJogador(e.target.value) }}\r\n                    value={nomeJogador}\r\n                />\r\n                <label>Quantidade de gols</label>\r\n                <Form.Control className=\"label-artilheiro\"\r\n                    onChange={e => { setQuantidadeGol(e.target.value) }}\r\n                    value={quantidadeGol}\r\n                />\r\n                 <label className=\"label-quatidade\">Quantidade total de gols marcados</label>\r\n                <Form.Control className=\"label-quantgol\"\r\n                    value={somaGols}\r\n                />\r\n            </div>\r\n            <Button className=\"btn-filtro-arquivo\" onClick={(e) => handleSalvar()}>\r\n                <div>Enviar Arquivo</div>\r\n            </Button>\r\n\r\n            <Button className=\"deletar-jogador\" onClick={(e) => handleDeletar()}>\r\n                <div>Deletar jogadores selecionados</div>\r\n            </Button>\r\n\r\n            <div>\r\n                        <BootstrapTable\r\n                            hover={true}\r\n                            classes=\"tabela\"\r\n                            condensed={true}\r\n                            keyField='id'\r\n                            data={itens}\r\n                            columns={colunas}\r\n                            selectRow={ selecaoLinhas }\r\n                            bootstrap4={true}\r\n                            bordered={false}\r\n                        />\r\n                    </div>\r\n        </>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}