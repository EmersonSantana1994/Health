{"ast":null,"code":"// import React, { useState, useEffect } from 'react';\n// import { Form} from 'react-bootstrap';\n// import * as Tone from 'tone';\n// const Calculator = () => {\n//   const [segundos, setSegundos] = useState(0);\n//   const [minutos, setMinutos] = useState(0);\n//   const [hora, setHora] = useState(0);\n//   const [cronometroAtivo, setCronometroAtivo] = useState(false);\n//   const [descrever, setDescrever] = useState(true);\n//   const [iniciar, setIniciar] = useState(false);\n//   const [mostrarIniciar, setMostrarIniciar] = useState(false);\n\n// async function tocarSom() {\n//   // Tocando a nota\n\n//   const osc = new Tone.Oscillator().toDestination();\n// const sampler = new Tone.Sampler({\n//   urls: {\n//     \"C4\": \"path/to/C4.mp3\",\n//     \"D#4\": \"path/to/Dsharp4.mp3\",\n//     // Adicione mais notas e seus respectivos arquivos de áudio, ou use um sampler diferente.\n// }, \n//   baseUrl: \"path/to/samples/\"\n// }).toDestination();\n\n// const notas = [\"C4\", \"E4\", \"G4\", \"B4\"];\n// const seq = new Tone.Sequence((time, note) => {\n//   sampler.triggerAttackRelease(note, \"8n\", time);\n// }, notas).start(0);\n\n// Tone.Transport.start();\n\n// }\n\n// //   // Importando a biblioteca Tone.js\n// // const Tone = require('tone');\n\n// // // Inicializando o Tone.js\n// // Tone.start();\n\n// // // Criando um oscilador para gerar um som\n// // const oscilador = new Tone.Oscillator(440, 'sine').toDestination();\n// // const oscilador2 = new Tone.Oscillator(440, 'sine').toDestination();\n\n// // // Definindo a duração da nota\n// // const duracaoNota = '4n'; // Por exemplo, 4n representa uma nota de quarto de tempo\n// // const duracaoNota2 = '5n'; // Por exemplo, 4n representa uma nota de quarto de tempo\n\n// // async function tocarSom() {\n// //   // Tocando a nota\n// //   await tocarSom1()\n\n// // }\n\n// // async function tocarSom1() {\n// //   // Tocando a nota\n// //   oscilador.start().stop(`+${duracaoNota}`);\n// // }\n\n// //   useEffect(() => {\n// //     if(segundos === 0 && minutos === 0 && hora === 0){\n// //         console.log(\"33333\", iniciar)\n// //         setCronometroAtivo(false);\n// //         setIniciar(false)\n// //     }\n// //    let seg = parseInt(segundos, 10)\n// //    let min = parseInt(minutos, 10)\n// //    let hor = parseInt(hora, 10)\n\n// //     if(seg === 0 && min === 0 && hor === 0 ){\n// //         setMostrarIniciar(false)\n// //         setIniciar(false)\n// //     }else{\n// //         setMostrarIniciar(true)\n// //     }\n// //   }, [segundos]);\n\n// //   useEffect(() => {\n\n// //   }, [segundos]);\n\n// //   useEffect(() => {\n// //     if(segundos === 0 && iniciar){\n// //         setMinutos(minutos => minutos - 1)\n// //     }\n\n// //   }, [segundos, iniciar]);\n\n// //   useEffect(() => {\n// //   if(minutos === 0 && iniciar){\n// //     setHora(hora => hora - 1)\n// // }\n\n// // }, [minutos, iniciar]);\n\n// // if(minutos < 0){\n// // setMinutos(0)\n// // }\n\n// // if(hora < 0){\n// //     setHora(0)\n// //     }\n\n// //   useEffect(() => {\n// //     let intervalo;\n// //     if (cronometroAtivo && iniciar) {\n// //       intervalo = setInterval(() => {\n// //         setSegundos(segundos => segundos - 1);\n// //       }, 1000);\n// //     } else {\n// //       clearInterval(intervalo);\n// //     }\n// //     return () => clearInterval(intervalo);\n// //   }, [cronometroAtivo, iniciar]);\n\n// //   const iniciarCronometro = () => {\n// //     if(segundos === 0 && minutos > 0){\n// // setSegundos(60)\n// //     }\n\n// //     setDescrever(false)\n// //     setIniciar(true)\n// //     setCronometroAtivo(true);\n// //   };\n\n// //   const pausarCronometro = () => {\n// //     setIniciar(false)\n// //     setCronometroAtivo(false);\n// //   };\n\n// //   const reiniciarCronometro = () => {\n// //     setSegundos(0);\n// //     setMinutos(0)\n// //     setHora(0)\n// //     setIniciar(false)\n// //     setCronometroAtivo(false);\n// //     setDescrever(true)\n// //   };\n\n// //   useEffect(() => {\n// //     if(segundos === 0 && minutos === 0 && hora === 0){\n// //         setCronometroAtivo(false);\n// //         setIniciar(false)\n// //     }\n// //    let seg = parseInt(segundos, 10)\n// //    let min = parseInt(minutos, 10)\n// //    let hor = parseInt(hora, 10)\n\n// //     if(seg === 0 && min === 0 && hor === 0 ){\n// //         console.log(\"entrou\")\n// //         setMostrarIniciar(false)\n// //         setIniciar(false)\n// //     }else{\n// //         setMostrarIniciar(true)\n// //     }\n// //   }, [segundos, minutos, hora ]);\n\n// //   function mostrarButaoIniciar(valor, tipo) {\n\n// // }\n\n//   return (\n//     <div>\n// <button onClick={tocarSom}>Tocar som</button>\n// {/* {descrever &&\n//      <p>Informe os segundos</p>\n// }\n// {descrever &&\n\n//                 <Form.Control\n//                     onChange={e => { setSegundos(e.target.value); mostrarButaoIniciar(e.target.value, \"s\") }}\n//                     value={segundos}\n//                 />\n//             }\n//             {descrever &&\n//      <p>Informe os minutos</p>\n// }\n//             {descrever &&\n//                 <Form.Control\n//                     onChange={e => { setMinutos(e.target.value); mostrarButaoIniciar(e.target.value, \"m\")}}\n//                     value={minutos}\n//                 />\n//             }\n//              {descrever &&\n//      <p>Informe as horas</p>\n// }\n//              {descrever &&\n//                 <Form.Control\n//                     onChange={e => { setHora(e.target.value); mostrarButaoIniciar(e.target.value, \"h\") }}\n//                     value={hora}\n//                 />\n//             }\n\n//       <h1>Cronômetro</h1>\n//       <p>{segundos} Segundos</p>\n//       <p>{minutos} Minutos</p>\n//       <p>{hora} Horas</p>\n//       <div>\n//       {mostrarIniciar &&\n//         <button onClick={iniciarCronometro}>Iniciar</button>\n//       }\n\n//         <button onClick={pausarCronometro}>Pausar</button>\n//         <button onClick={reiniciarCronometro}>Reiniciar</button>\n//       </div> */}\n//     </div>\n//   );\n// };\n\n// export default Calculator;","map":{"version":3,"names":[],"sources":["C:/Users/emers/OneDrive/Desktop/Front-Futebol/src/componentes/login/calculadora.js"],"sourcesContent":["// import React, { useState, useEffect } from 'react';\r\n// import { Form} from 'react-bootstrap';\r\n// import * as Tone from 'tone';\r\n// const Calculator = () => {\r\n//   const [segundos, setSegundos] = useState(0);\r\n//   const [minutos, setMinutos] = useState(0);\r\n//   const [hora, setHora] = useState(0);\r\n//   const [cronometroAtivo, setCronometroAtivo] = useState(false);\r\n//   const [descrever, setDescrever] = useState(true);\r\n//   const [iniciar, setIniciar] = useState(false);\r\n//   const [mostrarIniciar, setMostrarIniciar] = useState(false);\r\n\r\n\r\n\r\n\r\n// async function tocarSom() {\r\n//   // Tocando a nota\r\n  \r\n//   const osc = new Tone.Oscillator().toDestination();\r\n// const sampler = new Tone.Sampler({\r\n//   urls: {\r\n//     \"C4\": \"path/to/C4.mp3\",\r\n//     \"D#4\": \"path/to/Dsharp4.mp3\",\r\n//     // Adicione mais notas e seus respectivos arquivos de áudio, ou use um sampler diferente.\r\n// }, \r\n//   baseUrl: \"path/to/samples/\"\r\n// }).toDestination();\r\n\r\n// const notas = [\"C4\", \"E4\", \"G4\", \"B4\"];\r\n// const seq = new Tone.Sequence((time, note) => {\r\n//   sampler.triggerAttackRelease(note, \"8n\", time);\r\n// }, notas).start(0);\r\n\r\n// Tone.Transport.start();\r\n \r\n// }\r\n\r\n// //   // Importando a biblioteca Tone.js\r\n// // const Tone = require('tone');\r\n\r\n// // // Inicializando o Tone.js\r\n// // Tone.start();\r\n\r\n// // // Criando um oscilador para gerar um som\r\n// // const oscilador = new Tone.Oscillator(440, 'sine').toDestination();\r\n// // const oscilador2 = new Tone.Oscillator(440, 'sine').toDestination();\r\n\r\n// // // Definindo a duração da nota\r\n// // const duracaoNota = '4n'; // Por exemplo, 4n representa uma nota de quarto de tempo\r\n// // const duracaoNota2 = '5n'; // Por exemplo, 4n representa uma nota de quarto de tempo\r\n\r\n// // async function tocarSom() {\r\n// //   // Tocando a nota\r\n// //   await tocarSom1()\r\n \r\n// // }\r\n\r\n// // async function tocarSom1() {\r\n// //   // Tocando a nota\r\n// //   oscilador.start().stop(`+${duracaoNota}`);\r\n// // }\r\n\r\n\r\n\r\n\r\n\r\n// //   useEffect(() => {\r\n// //     if(segundos === 0 && minutos === 0 && hora === 0){\r\n// //         console.log(\"33333\", iniciar)\r\n// //         setCronometroAtivo(false);\r\n// //         setIniciar(false)\r\n// //     }\r\n// //    let seg = parseInt(segundos, 10)\r\n// //    let min = parseInt(minutos, 10)\r\n// //    let hor = parseInt(hora, 10)\r\n   \r\n// //     if(seg === 0 && min === 0 && hor === 0 ){\r\n// //         setMostrarIniciar(false)\r\n// //         setIniciar(false)\r\n// //     }else{\r\n// //         setMostrarIniciar(true)\r\n// //     }\r\n// //   }, [segundos]);\r\n\r\n// //   useEffect(() => {\r\n\r\n// //   }, [segundos]);\r\n\r\n// //   useEffect(() => {\r\n// //     if(segundos === 0 && iniciar){\r\n// //         setMinutos(minutos => minutos - 1)\r\n// //     }\r\n    \r\n// //   }, [segundos, iniciar]);\r\n\r\n// //   useEffect(() => {\r\n// //   if(minutos === 0 && iniciar){\r\n// //     setHora(hora => hora - 1)\r\n// // }\r\n\r\n// // }, [minutos, iniciar]);\r\n\r\n\r\n// // if(minutos < 0){\r\n// // setMinutos(0)\r\n// // }\r\n\r\n// // if(hora < 0){\r\n// //     setHora(0)\r\n// //     }\r\n\r\n// //   useEffect(() => {\r\n// //     let intervalo;\r\n// //     if (cronometroAtivo && iniciar) {\r\n// //       intervalo = setInterval(() => {\r\n// //         setSegundos(segundos => segundos - 1);\r\n// //       }, 1000);\r\n// //     } else {\r\n// //       clearInterval(intervalo);\r\n// //     }\r\n// //     return () => clearInterval(intervalo);\r\n// //   }, [cronometroAtivo, iniciar]);\r\n\r\n// //   const iniciarCronometro = () => {\r\n// //     if(segundos === 0 && minutos > 0){\r\n// // setSegundos(60)\r\n// //     }\r\n\r\n\r\n\r\n// //     setDescrever(false)\r\n// //     setIniciar(true)\r\n// //     setCronometroAtivo(true);\r\n// //   };\r\n\r\n// //   const pausarCronometro = () => {\r\n// //     setIniciar(false)\r\n// //     setCronometroAtivo(false);\r\n// //   };\r\n\r\n// //   const reiniciarCronometro = () => {\r\n// //     setSegundos(0);\r\n// //     setMinutos(0)\r\n// //     setHora(0)\r\n// //     setIniciar(false)\r\n// //     setCronometroAtivo(false);\r\n// //     setDescrever(true)\r\n// //   };\r\n\r\n// //   useEffect(() => {\r\n// //     if(segundos === 0 && minutos === 0 && hora === 0){\r\n// //         setCronometroAtivo(false);\r\n// //         setIniciar(false)\r\n// //     }\r\n// //    let seg = parseInt(segundos, 10)\r\n// //    let min = parseInt(minutos, 10)\r\n// //    let hor = parseInt(hora, 10)\r\n   \r\n// //     if(seg === 0 && min === 0 && hor === 0 ){\r\n// //         console.log(\"entrou\")\r\n// //         setMostrarIniciar(false)\r\n// //         setIniciar(false)\r\n// //     }else{\r\n// //         setMostrarIniciar(true)\r\n// //     }\r\n// //   }, [segundos, minutos, hora ]);\r\n\r\n\r\n// //   function mostrarButaoIniciar(valor, tipo) {\r\n\r\n// // }\r\n\r\n//   return (\r\n//     <div>\r\n// <button onClick={tocarSom}>Tocar som</button>\r\n// {/* {descrever &&\r\n//      <p>Informe os segundos</p>\r\n// }\r\n// {descrever &&\r\n   \r\n//                 <Form.Control\r\n//                     onChange={e => { setSegundos(e.target.value); mostrarButaoIniciar(e.target.value, \"s\") }}\r\n//                     value={segundos}\r\n//                 />\r\n//             }\r\n//             {descrever &&\r\n//      <p>Informe os minutos</p>\r\n// }\r\n//             {descrever &&\r\n//                 <Form.Control\r\n//                     onChange={e => { setMinutos(e.target.value); mostrarButaoIniciar(e.target.value, \"m\")}}\r\n//                     value={minutos}\r\n//                 />\r\n//             }\r\n//              {descrever &&\r\n//      <p>Informe as horas</p>\r\n// }\r\n//              {descrever &&\r\n//                 <Form.Control\r\n//                     onChange={e => { setHora(e.target.value); mostrarButaoIniciar(e.target.value, \"h\") }}\r\n//                     value={hora}\r\n//                 />\r\n//             }\r\n\r\n\r\n//       <h1>Cronômetro</h1>\r\n//       <p>{segundos} Segundos</p>\r\n//       <p>{minutos} Minutos</p>\r\n//       <p>{hora} Horas</p>\r\n//       <div>\r\n//       {mostrarIniciar &&\r\n//         <button onClick={iniciarCronometro}>Iniciar</button>\r\n//       }\r\n        \r\n//         <button onClick={pausarCronometro}>Pausar</button>\r\n//         <button onClick={reiniciarCronometro}>Reiniciar</button>\r\n//       </div> */}\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default Calculator;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}