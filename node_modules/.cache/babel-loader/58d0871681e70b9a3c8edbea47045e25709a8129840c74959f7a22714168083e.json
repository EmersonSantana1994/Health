{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emers\\\\OneDrive\\\\Desktop\\\\projeto\\\\Front-Futebol\\\\src\\\\componentes\\\\login\\\\selectStatusContrato.js\",\n  _s = $RefreshSig$();\n//IMPORTAÇÕES\nimport React, { useState, useEffect, useRef } from 'react'; /*eslint-disable*/\nimport { Button, Form } from 'react-bootstrap';\n// ICONES\nimport { setaDropdown } from '../../utils/alternanciaIcones.js';\n\n/*  COMO USAR\r\n    Importe a modal para dentro do componente que irá fazer uso dela.\r\n    ex: import SelectCliente from '../../componentesModais/selects/selectCliente'\r\n\r\n    Crie um hook apropriado para esconder e exibir a mensagem quando necessário.\r\n    ex: const [revelarSelectCliente, setRevelarSelectCliente] = useState(false)\r\n\r\n    Após isso, posicione-a dentro do return do seu componente e passe os props para\r\n    customizar o conteúdo da mensagem da seguinte forma. É interessante utilizar um\r\n    <Button/> com uma função onClick, dentro de um >Form.Group/> para que o campo\r\n    se mantenha similar aos campos de texto normais.\r\n    ex: <Form.Group>\r\n            <Form.Label className=\"label\">\r\n                <div className=\"fonte-cabecalho\">cliente {iconeAsterisco}</div>\r\n            </Form.Label>\r\n            <Button name=\"cdCliente\" className=\"campo-select-modal\" onClick={() => setRevelarSelectCliente(!revelarSelectCliente)}>\r\n                <div className=\"campo-select-modal-label\">{dsCliente}</div>\r\n                <img className=\"campo-select-modal-icone\" src={setaDropdown()} alt=\"drop\" />\r\n            </Button>\r\n            { revelarSelectCliente === true &&\r\n                <SelectCliente\r\n                    setRevelarSelectCliente={setRevelarSelectCliente} //Hook para fechar a modal\r\n                    setCdCliente={setCdCliente} //Código do cliente\r\n                    setDsCliente={setDsCliente} //Nome do cliente\r\n                    phCliente={phCliente} //Placeholder para mostrar o valor original em caso de edição\r\n                >\r\n                </SelectCliente>\r\n            }\r\n        </Form.Group>*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelectContrato(props) {\n  _s();\n  const [contrato, setContrato] = useState([]);\n  const [spinAtivo, setSpinAtivo] = useState(true);\n\n  //HOOKS MODAL\n  const modal = useRef();\n  useEffect(() => {\n    if (props.rota == \"filtroSimcard\" && props.setResetContrato) {\n      props.setResetContrato(false);\n    }\n    let dsContratos = [];\n    let idContratos = [];\n    async function renderContrato() {\n      setSpinAtivo(true);\n      let todosContrato = [];\n      let JSONcontratos = [];\n      let dadosStatusContrato;\n      idContratos = await data.dados[0].CD_SITUACAO.split(\";\").map(item => item);\n      dsContratos = await data.dados[0].SITUACAO.split(\";\").map(item => item);\n      const tratarSituacao = dsContrato => {\n        switch (dsContrato) {\n          case 'BLOQUEIO TEMPORARIO':\n            return 'Bloqueio Temporário';\n          case 'DEMONSTRACAO':\n            return 'Demonstração';\n          case 'PRE ATIVO':\n            return 'Pré - ativo';\n          default:\n            return dsContrato.slice(0, 1).toUpperCase() + dsContrato.slice(1, dsContrato.length).toLowerCase();\n        }\n      };\n      JSONcontratos = dsContratos.map((dsContrato, i) => {\n        return {\n          SITUACAO: tratarSituacao(dsContrato),\n          CD_SITUACAO: idContratos[i]\n        };\n      });\n      localStorage.setItem(\"keyStatusContrato\", JSON.stringify(JSONcontratos));\n      dadosStatusContrato = JSON.parse(localStorage.getItem(\"keyStatusContrato\"));\n      if (JSONcontratos.length > 0) {\n        let objetoContrato = JSONcontratos.map((contratos, i) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"campo-select-opcao-filtro campo-select-opcao-1\",\n              onClick: () => handleContrato(contratos.CD_SITUACAO, contratos.SITUACAO),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fonte-cor-1 fonte-campo campo-select-opcao-label\",\n                children: contratos.SITUACAO\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 33\n            }, this), JSONcontratos[i + 1] !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"campo-select-divisor-cor-1 campo-select-divisor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 72\n            }, this)]\n          }, \"menu-\" + contratos.CD_SITUACAO, true, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 29\n          }, this);\n        });\n        setSpinAtivo(false);\n        setContrato(objetoContrato);\n      } else {\n        let objetoContrato = () => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              disabled: true,\n              className: \"campo-select-opcao campo-select-opcao-1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fonte-cor-1 fonte-campo campo-select-opcao-label nao-selecionavel\",\n                children: \"Nenhuma informa\\xE7\\xE3o encontrada\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 29\n          }, this);\n        };\n        setContrato(objetoContrato);\n      }\n      dadosStatusContrato = JSON.parse(localStorage.getItem(\"keyStatusContrato\"));\n      if (dadosStatusContrato.length > 0) {\n        let objetoContrato = dadosStatusContrato.map((contratos, i) => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"campo-select-opcao-filtro campo-select-opcao-1\",\n              onClick: () => handleContrato(contratos.CD_SITUACAO, contratos.SITUACAO),\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fonte-cor-1 fonte-campo campo-select-opcao-label\",\n                children: contratos.SITUACAO\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this), dadosStatusContrato[i + 1] !== undefined && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"campo-select-divisor-cor-1 campo-select-divisor\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 78\n            }, this)]\n          }, \"menu-\" + contratos.CD_SITUACAO, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this);\n        });\n        setSpinAtivo(false);\n        setContrato(objetoContrato);\n      } else {\n        let objetoContrato = () => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              disabled: true,\n              className: \"campo-select-opcao campo-select-opcao-1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"fonte-cor-1 fonte-campo campo-select-opcao-label nao-selecionavel\",\n                children: \"Nenhuma informa\\xE7\\xE3o encontrada\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this);\n        };\n        setContrato(objetoContrato);\n      }\n    }\n    renderContrato();\n    document.addEventListener('mousedown', handleClickFora);\n    return () => document.removeEventListener('mousedown', handleClickFora);\n  }, []);\n  const handleClickFora = e => {\n    if (!modal.current.contains(e.target)) {\n      handleCancelar();\n    }\n  };\n  function handleContrato(codigo, contrato) {\n    props.setNomeContrato(contrato + \"*\" + codigo);\n    props.setFiltroSituacaoContrato(codigo + \"*\" + contrato);\n    handleCancelar();\n  }\n  function handleCancelar() {\n    props.setRevelarSelectContrato(false);\n  }\n  return /*#__PURE__*/_jsxDEV(Form, {\n    ref: modal,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      className: props.rota && props.rota == \"filtroSimcard\" ? \"campo-texto-cor-3 campo-select-filtro-b\" : \"campo-texto-cor-3 campo-select-filtro\",\n      onClick: () => props.setRevelarSelectContrato(false),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        className: props.rota && props.rota == \"filtroSimcard\" ? \"campo-select-icone-ativado-filtro\" : \"campo-select-icone-ativado\",\n        src: setaDropdown(),\n        alt: \"drop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: \"dcsudcsk\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 9\n  }, this);\n}\n_s(SelectContrato, \"h6u67KtNsdtrSvwBi69uT2NGWFw=\");\n_c = SelectContrato;\nvar _c;\n$RefreshReg$(_c, \"SelectContrato\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Button","Form","setaDropdown","jsxDEV","_jsxDEV","SelectContrato","props","_s","contrato","setContrato","spinAtivo","setSpinAtivo","modal","rota","setResetContrato","dsContratos","idContratos","renderContrato","todosContrato","JSONcontratos","dadosStatusContrato","data","dados","CD_SITUACAO","split","map","item","SITUACAO","tratarSituacao","dsContrato","slice","toUpperCase","length","toLowerCase","i","localStorage","setItem","JSON","stringify","parse","getItem","objetoContrato","contratos","children","className","onClick","handleContrato","fileName","_jsxFileName","lineNumber","columnNumber","undefined","disabled","document","addEventListener","handleClickFora","removeEventListener","e","current","contains","target","handleCancelar","codigo","setNomeContrato","setFiltroSituacaoContrato","setRevelarSelectContrato","ref","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/emers/OneDrive/Desktop/projeto/Front-Futebol/src/componentes/login/selectStatusContrato.js"],"sourcesContent":["//IMPORTAÇÕES\r\nimport React, { useState, useEffect, useRef } from 'react';/*eslint-disable*/\r\nimport { Button, Form } from 'react-bootstrap';\r\n// ICONES\r\nimport {setaDropdown}  from '../../utils/alternanciaIcones.js'\r\n\r\n\r\n/*  COMO USAR\r\n    Importe a modal para dentro do componente que irá fazer uso dela.\r\n    ex: import SelectCliente from '../../componentesModais/selects/selectCliente'\r\n\r\n    Crie um hook apropriado para esconder e exibir a mensagem quando necessário.\r\n    ex: const [revelarSelectCliente, setRevelarSelectCliente] = useState(false)\r\n\r\n    Após isso, posicione-a dentro do return do seu componente e passe os props para\r\n    customizar o conteúdo da mensagem da seguinte forma. É interessante utilizar um\r\n    <Button/> com uma função onClick, dentro de um >Form.Group/> para que o campo\r\n    se mantenha similar aos campos de texto normais.\r\n    ex: <Form.Group>\r\n            <Form.Label className=\"label\">\r\n                <div className=\"fonte-cabecalho\">cliente {iconeAsterisco}</div>\r\n            </Form.Label>\r\n            <Button name=\"cdCliente\" className=\"campo-select-modal\" onClick={() => setRevelarSelectCliente(!revelarSelectCliente)}>\r\n                <div className=\"campo-select-modal-label\">{dsCliente}</div>\r\n                <img className=\"campo-select-modal-icone\" src={setaDropdown()} alt=\"drop\" />\r\n            </Button>\r\n            { revelarSelectCliente === true &&\r\n                <SelectCliente\r\n                    setRevelarSelectCliente={setRevelarSelectCliente} //Hook para fechar a modal\r\n                    setCdCliente={setCdCliente} //Código do cliente\r\n                    setDsCliente={setDsCliente} //Nome do cliente\r\n                    phCliente={phCliente} //Placeholder para mostrar o valor original em caso de edição\r\n                >\r\n                </SelectCliente>\r\n            }\r\n        </Form.Group>*/\r\n\r\nexport default function SelectContrato(props) {\r\n    const [contrato, setContrato] = useState([])\r\n    const [spinAtivo, setSpinAtivo] = useState(true);\r\n\r\n    //HOOKS MODAL\r\n    const modal = useRef();\r\n\r\n    useEffect(() => {\r\n        if (props.rota == \"filtroSimcard\" && props.setResetContrato) {\r\n            props.setResetContrato(false)\r\n        }\r\n        let dsContratos = [];\r\n        let idContratos = [];\r\n        async function renderContrato() {\r\n            setSpinAtivo(true)\r\n            let todosContrato = [];\r\n            let JSONcontratos = [];\r\n            let dadosStatusContrato\r\n           \r\n                idContratos = await data.dados[0].CD_SITUACAO.split(\";\").map((item) => item);\r\n\r\n                dsContratos = await data.dados[0].SITUACAO.split(\";\").map((item) => item)\r\n            \r\n                const tratarSituacao = (dsContrato) => {\r\n                    switch(dsContrato) {\r\n                        case 'BLOQUEIO TEMPORARIO':\r\n                            return 'Bloqueio Temporário';\r\n                        case 'DEMONSTRACAO':\r\n                            return 'Demonstração';\r\n                        case 'PRE ATIVO':\r\n                            return 'Pré - ativo';\r\n                        default:\r\n                            return dsContrato.slice(0, 1).toUpperCase() + dsContrato.slice(1, dsContrato.length).toLowerCase();\r\n                    }\r\n                }\r\n            \r\n                JSONcontratos = dsContratos.map((dsContrato, i) => {\r\n                    return {\r\n                        SITUACAO: tratarSituacao(dsContrato),\r\n                        CD_SITUACAO: idContratos[i]\r\n                    }\r\n                })\r\n\r\n                localStorage.setItem(\"keyStatusContrato\", JSON.stringify(JSONcontratos))\r\n                dadosStatusContrato = JSON.parse(localStorage.getItem(\"keyStatusContrato\"))\r\n                if (JSONcontratos.length > 0) {\r\n                    let objetoContrato = JSONcontratos.map((contratos, i) => {\r\n                        return (\r\n                            <li key={\"menu-\" + contratos.CD_SITUACAO}>\r\n                                <div className=\"campo-select-opcao-filtro campo-select-opcao-1\" onClick={() => handleContrato(contratos.CD_SITUACAO, contratos.SITUACAO)}>\r\n                                    <span className=\"fonte-cor-1 fonte-campo campo-select-opcao-label\">{contratos.SITUACAO}</span>\r\n                                </div>\r\n                                {JSONcontratos[i + 1] !== undefined && <div className=\"campo-select-divisor-cor-1 campo-select-divisor\"></div>}\r\n                            </li>\r\n                        );\r\n                    })\r\n                    setSpinAtivo(false)\r\n                    setContrato(objetoContrato)\r\n                } else {\r\n                    let objetoContrato = () => {\r\n                        return (\r\n                            <li>\r\n                                <div disabled className=\"campo-select-opcao campo-select-opcao-1\">\r\n                                    <span className=\"fonte-cor-1 fonte-campo campo-select-opcao-label nao-selecionavel\">Nenhuma informação encontrada</span>\r\n                                </div>\r\n                            </li>\r\n                        );\r\n                    }\r\n                    setContrato(objetoContrato)\r\n                }\r\n\r\n                dadosStatusContrato = JSON.parse(localStorage.getItem(\"keyStatusContrato\"))\r\n                if (dadosStatusContrato.length > 0) {\r\n                    let objetoContrato = dadosStatusContrato.map((contratos, i) => {\r\n                        return (\r\n                            <li key={\"menu-\" + contratos.CD_SITUACAO}>\r\n                                <div className=\"campo-select-opcao-filtro campo-select-opcao-1\" onClick={() => handleContrato(contratos.CD_SITUACAO, contratos.SITUACAO)}>\r\n                                    <span className=\"fonte-cor-1 fonte-campo campo-select-opcao-label\">{contratos.SITUACAO}</span>\r\n                                </div>\r\n                                {dadosStatusContrato[i + 1] !== undefined && <div className=\"campo-select-divisor-cor-1 campo-select-divisor\"></div>}\r\n                            </li>\r\n                        );\r\n                    })\r\n                    setSpinAtivo(false)\r\n                    setContrato(objetoContrato)\r\n                } else {\r\n                    let objetoContrato = () => {\r\n                        return (\r\n                            <li>\r\n                                <div disabled className=\"campo-select-opcao campo-select-opcao-1\">\r\n                                    <span className=\"fonte-cor-1 fonte-campo campo-select-opcao-label nao-selecionavel\">Nenhuma informação encontrada</span>\r\n                                </div>\r\n                            </li>\r\n                        );\r\n                    }\r\n                    setContrato(objetoContrato)\r\n                }\r\n                     \r\n        }\r\n        renderContrato()\r\n        document.addEventListener('mousedown', handleClickFora);\r\n        return () => document.removeEventListener('mousedown', handleClickFora);\r\n    }, [])\r\n\r\n    const handleClickFora = e => {\r\n        if (!modal.current.contains(e.target)) {    \r\n            handleCancelar()\r\n        }\r\n    };\r\n\r\n    function handleContrato(codigo, contrato) {\r\n        props.setNomeContrato(contrato + \"*\" + codigo)\r\n        props.setFiltroSituacaoContrato(codigo + \"*\" + contrato)\r\n        handleCancelar()\r\n    }\r\n\r\n    function handleCancelar() {\r\n        props.setRevelarSelectContrato(false)\r\n    }\r\n\r\n\r\n    return (\r\n        <Form ref={modal}>\r\n            <Button className={props.rota && props.rota == \"filtroSimcard\" ? \"campo-texto-cor-3 campo-select-filtro-b\" : \"campo-texto-cor-3 campo-select-filtro\"} onClick={() => props.setRevelarSelectContrato(false)}>\r\n                <img className={props.rota && props.rota == \"filtroSimcard\" ? \"campo-select-icone-ativado-filtro\" : \"campo-select-icone-ativado\"} src={setaDropdown()} alt=\"drop\" />\r\n            </Button>\r\n            \r\n                <ul>\r\n                    dcsudcsk\r\n                </ul>\r\n            \r\n        </Form>\r\n    )\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}