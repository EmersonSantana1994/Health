{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emers\\\\OneDrive\\\\Desktop\\\\projeto\\\\Front-Futebol\\\\src\\\\componentes\\\\login\\\\calculadora.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Form } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calculator = () => {\n  _s();\n  const [segundos, setSegundos] = useState(0);\n  const [minutos, setMinutos] = useState(0);\n  const [hora, setHora] = useState(0);\n  const [cronometroAtivo, setCronometroAtivo] = useState(false);\n  const [descrever, setDescrever] = useState(true);\n  const [iniciar, setIniciar] = useState(false);\n  const [mostrarIniciar, setMostrarIniciar] = useState(false);\n\n  // Importando a biblioteca Tone.js\n  const Tone = require('tone');\n\n  // Inicializando o Tone.js\n  Tone.start();\n\n  // Criando um oscilador para gerar um som\n  const oscilador = new Tone.Oscillator(440, 'sine').toDestination();\n\n  // Definindo a duração da nota\n  const duracaoNota = '4n'; // Por exemplo, 4n representa uma nota de quarto de tempo\n\n  // Tocando a nota\n  oscilador.start().stop(`+${duracaoNota}`);\n\n  //   useEffect(() => {\n  //     if(segundos === 0 && minutos === 0 && hora === 0){\n  //         console.log(\"33333\", iniciar)\n  //         setCronometroAtivo(false);\n  //         setIniciar(false)\n  //     }\n  //    let seg = parseInt(segundos, 10)\n  //    let min = parseInt(minutos, 10)\n  //    let hor = parseInt(hora, 10)\n\n  //     if(seg === 0 && min === 0 && hor === 0 ){\n  //         setMostrarIniciar(false)\n  //         setIniciar(false)\n  //     }else{\n  //         setMostrarIniciar(true)\n  //     }\n  //   }, [segundos]);\n\n  //   useEffect(() => {\n\n  //   }, [segundos]);\n\n  //   useEffect(() => {\n  //     if(segundos === 0 && iniciar){\n  //         setMinutos(minutos => minutos - 1)\n  //     }\n\n  //   }, [segundos, iniciar]);\n\n  //   useEffect(() => {\n  //   if(minutos === 0 && iniciar){\n  //     setHora(hora => hora - 1)\n  // }\n\n  // }, [minutos, iniciar]);\n\n  // if(minutos < 0){\n  // setMinutos(0)\n  // }\n\n  // if(hora < 0){\n  //     setHora(0)\n  //     }\n\n  //   useEffect(() => {\n  //     let intervalo;\n  //     if (cronometroAtivo && iniciar) {\n  //       intervalo = setInterval(() => {\n  //         setSegundos(segundos => segundos - 1);\n  //       }, 1000);\n  //     } else {\n  //       clearInterval(intervalo);\n  //     }\n  //     return () => clearInterval(intervalo);\n  //   }, [cronometroAtivo, iniciar]);\n\n  //   const iniciarCronometro = () => {\n  //     if(segundos === 0 && minutos > 0){\n  // setSegundos(60)\n  //     }\n\n  //     setDescrever(false)\n  //     setIniciar(true)\n  //     setCronometroAtivo(true);\n  //   };\n\n  //   const pausarCronometro = () => {\n  //     setIniciar(false)\n  //     setCronometroAtivo(false);\n  //   };\n\n  //   const reiniciarCronometro = () => {\n  //     setSegundos(0);\n  //     setMinutos(0)\n  //     setHora(0)\n  //     setIniciar(false)\n  //     setCronometroAtivo(false);\n  //     setDescrever(true)\n  //   };\n\n  //   useEffect(() => {\n  //     if(segundos === 0 && minutos === 0 && hora === 0){\n  //         setCronometroAtivo(false);\n  //         setIniciar(false)\n  //     }\n  //    let seg = parseInt(segundos, 10)\n  //    let min = parseInt(minutos, 10)\n  //    let hor = parseInt(hora, 10)\n\n  //     if(seg === 0 && min === 0 && hor === 0 ){\n  //         console.log(\"entrou\")\n  //         setMostrarIniciar(false)\n  //         setIniciar(false)\n  //     }else{\n  //         setMostrarIniciar(true)\n  //     }\n  //   }, [segundos, minutos, hora ]);\n\n  //   function mostrarButaoIniciar(valor, tipo) {\n\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n_s(Calculator, \"kA06j+t/0M72GOZAinK8TYj26c8=\");\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","useEffect","Form","jsxDEV","_jsxDEV","Calculator","_s","segundos","setSegundos","minutos","setMinutos","hora","setHora","cronometroAtivo","setCronometroAtivo","descrever","setDescrever","iniciar","setIniciar","mostrarIniciar","setMostrarIniciar","Tone","require","start","oscilador","Oscillator","toDestination","duracaoNota","stop","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/emers/OneDrive/Desktop/projeto/Front-Futebol/src/componentes/login/calculadora.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Form} from 'react-bootstrap';\r\nconst Calculator = () => {\r\n  const [segundos, setSegundos] = useState(0);\r\n  const [minutos, setMinutos] = useState(0);\r\n  const [hora, setHora] = useState(0);\r\n  const [cronometroAtivo, setCronometroAtivo] = useState(false);\r\n  const [descrever, setDescrever] = useState(true);\r\n  const [iniciar, setIniciar] = useState(false);\r\n  const [mostrarIniciar, setMostrarIniciar] = useState(false);\r\n\r\n  // Importando a biblioteca Tone.js\r\nconst Tone = require('tone');\r\n\r\n// Inicializando o Tone.js\r\nTone.start();\r\n\r\n// Criando um oscilador para gerar um som\r\nconst oscilador = new Tone.Oscillator(440, 'sine').toDestination();\r\n\r\n// Definindo a duração da nota\r\nconst duracaoNota = '4n'; // Por exemplo, 4n representa uma nota de quarto de tempo\r\n\r\n// Tocando a nota\r\noscilador.start().stop(`+${duracaoNota}`);\r\n\r\n\r\n\r\n//   useEffect(() => {\r\n//     if(segundos === 0 && minutos === 0 && hora === 0){\r\n//         console.log(\"33333\", iniciar)\r\n//         setCronometroAtivo(false);\r\n//         setIniciar(false)\r\n//     }\r\n//    let seg = parseInt(segundos, 10)\r\n//    let min = parseInt(minutos, 10)\r\n//    let hor = parseInt(hora, 10)\r\n   \r\n//     if(seg === 0 && min === 0 && hor === 0 ){\r\n//         setMostrarIniciar(false)\r\n//         setIniciar(false)\r\n//     }else{\r\n//         setMostrarIniciar(true)\r\n//     }\r\n//   }, [segundos]);\r\n\r\n//   useEffect(() => {\r\n\r\n//   }, [segundos]);\r\n\r\n//   useEffect(() => {\r\n//     if(segundos === 0 && iniciar){\r\n//         setMinutos(minutos => minutos - 1)\r\n//     }\r\n    \r\n//   }, [segundos, iniciar]);\r\n\r\n//   useEffect(() => {\r\n//   if(minutos === 0 && iniciar){\r\n//     setHora(hora => hora - 1)\r\n// }\r\n\r\n// }, [minutos, iniciar]);\r\n\r\n\r\n// if(minutos < 0){\r\n// setMinutos(0)\r\n// }\r\n\r\n// if(hora < 0){\r\n//     setHora(0)\r\n//     }\r\n\r\n//   useEffect(() => {\r\n//     let intervalo;\r\n//     if (cronometroAtivo && iniciar) {\r\n//       intervalo = setInterval(() => {\r\n//         setSegundos(segundos => segundos - 1);\r\n//       }, 1000);\r\n//     } else {\r\n//       clearInterval(intervalo);\r\n//     }\r\n//     return () => clearInterval(intervalo);\r\n//   }, [cronometroAtivo, iniciar]);\r\n\r\n//   const iniciarCronometro = () => {\r\n//     if(segundos === 0 && minutos > 0){\r\n// setSegundos(60)\r\n//     }\r\n\r\n\r\n\r\n//     setDescrever(false)\r\n//     setIniciar(true)\r\n//     setCronometroAtivo(true);\r\n//   };\r\n\r\n//   const pausarCronometro = () => {\r\n//     setIniciar(false)\r\n//     setCronometroAtivo(false);\r\n//   };\r\n\r\n//   const reiniciarCronometro = () => {\r\n//     setSegundos(0);\r\n//     setMinutos(0)\r\n//     setHora(0)\r\n//     setIniciar(false)\r\n//     setCronometroAtivo(false);\r\n//     setDescrever(true)\r\n//   };\r\n\r\n//   useEffect(() => {\r\n//     if(segundos === 0 && minutos === 0 && hora === 0){\r\n//         setCronometroAtivo(false);\r\n//         setIniciar(false)\r\n//     }\r\n//    let seg = parseInt(segundos, 10)\r\n//    let min = parseInt(minutos, 10)\r\n//    let hor = parseInt(hora, 10)\r\n   \r\n//     if(seg === 0 && min === 0 && hor === 0 ){\r\n//         console.log(\"entrou\")\r\n//         setMostrarIniciar(false)\r\n//         setIniciar(false)\r\n//     }else{\r\n//         setMostrarIniciar(true)\r\n//     }\r\n//   }, [segundos, minutos, hora ]);\r\n\r\n\r\n//   function mostrarButaoIniciar(valor, tipo) {\r\n\r\n// }\r\n\r\n  return (\r\n    <div>\r\n\r\n{/* {descrever &&\r\n     <p>Informe os segundos</p>\r\n}\r\n{descrever &&\r\n   \r\n                <Form.Control\r\n                    onChange={e => { setSegundos(e.target.value); mostrarButaoIniciar(e.target.value, \"s\") }}\r\n                    value={segundos}\r\n                />\r\n            }\r\n            {descrever &&\r\n     <p>Informe os minutos</p>\r\n}\r\n            {descrever &&\r\n                <Form.Control\r\n                    onChange={e => { setMinutos(e.target.value); mostrarButaoIniciar(e.target.value, \"m\")}}\r\n                    value={minutos}\r\n                />\r\n            }\r\n             {descrever &&\r\n     <p>Informe as horas</p>\r\n}\r\n             {descrever &&\r\n                <Form.Control\r\n                    onChange={e => { setHora(e.target.value); mostrarButaoIniciar(e.target.value, \"h\") }}\r\n                    value={hora}\r\n                />\r\n            }\r\n\r\n\r\n      <h1>Cronômetro</h1>\r\n      <p>{segundos} Segundos</p>\r\n      <p>{minutos} Minutos</p>\r\n      <p>{hora} Horas</p>\r\n      <div>\r\n      {mostrarIniciar &&\r\n        <button onClick={iniciarCronometro}>Iniciar</button>\r\n      }\r\n        \r\n        <button onClick={pausarCronometro}>Pausar</button>\r\n        <button onClick={reiniciarCronometro}>Reiniciar</button>\r\n      </div> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Calculator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,IAAI,QAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AACtC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC3C,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACzC,MAAM,CAACW,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAM,CAACa,eAAe,EAAEC,kBAAkB,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACmB,cAAc,EAAEC,iBAAiB,CAAC,GAAGpB,QAAQ,CAAC,KAAK,CAAC;;EAE3D;EACF,MAAMqB,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;;EAE5B;EACAD,IAAI,CAACE,KAAK,CAAC,CAAC;;EAEZ;EACA,MAAMC,SAAS,GAAG,IAAIH,IAAI,CAACI,UAAU,CAAC,GAAG,EAAE,MAAM,CAAC,CAACC,aAAa,CAAC,CAAC;;EAElE;EACA,MAAMC,WAAW,GAAG,IAAI,CAAC,CAAC;;EAE1B;EACAH,SAAS,CAACD,KAAK,CAAC,CAAC,CAACK,IAAI,CAAE,IAAGD,WAAY,EAAC,CAAC;;EAIzC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;;EAEA;EACA;EACA;EACA;;EAEA;;EAGA;EACA;EACA;;EAEA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAIA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAGA;;EAEA;;EAEE,oBACEvB,OAAA;IAAAyB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OA4CK,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAnLID,UAAU;AAAA4B,EAAA,GAAV5B,UAAU;AAqLhB,eAAeA,UAAU;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}