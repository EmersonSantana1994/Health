{"ast":null,"code":"\"use strict\";\n\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SpeechClient = void 0;\nconst stream_1 = require(\"stream\");\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v2/speech_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./speech_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Enables speech transcription and resource management.\n * @class\n * @memberof v2\n */\nclass SpeechClient {\n  /**\n   * Construct an instance of SpeechClient.\n   *\n   * @param {object} [options] - The configuration object.\n   * The options accepted by the constructor are described in detail\n   * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n   * The common options are:\n   * @param {object} [options.credentials] - Credentials object.\n   * @param {string} [options.credentials.client_email]\n   * @param {string} [options.credentials.private_key]\n   * @param {string} [options.email] - Account email address. Required when\n   *     using a .pem or .p12 keyFilename.\n   * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n   *     .p12 key downloaded from the Google Developers Console. If you provide\n   *     a path to a JSON file, the projectId option below is not necessary.\n   *     NOTE: .pem and .p12 require you to specify options.email as well.\n   * @param {number} [options.port] - The port on which to connect to\n   *     the remote host.\n   * @param {string} [options.projectId] - The project ID from the Google\n   *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n   *     the environment variable GCLOUD_PROJECT for your project ID. If your\n   *     app is running in an environment which supports\n   *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n   *     your project ID will be detected automatically.\n   * @param {string} [options.apiEndpoint] - The domain name of the\n   *     API remote host.\n   * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n   *     Follows the structure of {@link gapicConfig}.\n   * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n   *     For more information, please check the\n   *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n   * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n   *     need to avoid loading the default gRPC version and want to use the fallback\n   *     HTTP implementation. Load only fallback version and pass it to the constructor:\n   *     ```\n   *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n   *     const client = new SpeechClient({fallback: true}, gax);\n   *     ```\n   */\n  constructor(opts, gaxInstance) {\n    var _a, _b, _c, _d, _e;\n    this._terminated = false;\n    this.descriptors = {\n      page: {},\n      stream: {},\n      longrunning: {},\n      batching: {}\n    };\n    // Ensure that options include all the required fields.\n    const staticMembers = this.constructor;\n    if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) && (opts === null || opts === void 0 ? void 0 : opts.universeDomain) && (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n      throw new Error('Please set either universe_domain or universeDomain, but not both.');\n    }\n    const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object' ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN'] : undefined;\n    this._universeDomain = (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n    this._servicePath = 'speech.' + this._universeDomain;\n    const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n    this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n    const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n    const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n    const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function';\n    opts = Object.assign({\n      servicePath,\n      port,\n      clientConfig,\n      fallback\n    }, opts);\n    // Request numeric enum values if REST transport is used.\n    opts.numericEnums = true;\n    // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n    if (servicePath !== this._servicePath && !('scopes' in opts)) {\n      opts['scopes'] = staticMembers.scopes;\n    }\n    // Load google-gax module synchronously if needed\n    if (!gaxInstance) {\n      gaxInstance = require('google-gax');\n    }\n    // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n    this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n    // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n    this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n    // Save options to use in initialize() method.\n    this._opts = opts;\n    // Save the auth object to the client, for use by other methods.\n    this.auth = this._gaxGrpc.auth;\n    // Set useJWTAccessWithScope on the auth object.\n    this.auth.useJWTAccessWithScope = true;\n    // Set defaultServicePath on the auth object.\n    this.auth.defaultServicePath = this._servicePath;\n    // Set the default scopes in auth client if needed.\n    if (servicePath === this._servicePath) {\n      this.auth.defaultScopes = staticMembers.scopes;\n    }\n    this.locationsClient = new this._gaxModule.LocationsClient(this._gaxGrpc, opts);\n    // Determine the client header string.\n    const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n    if (typeof process === 'object' && 'versions' in process) {\n      clientHeader.push(`gl-node/${process.versions.node}`);\n    } else {\n      clientHeader.push(`gl-web/${this._gaxModule.version}`);\n    }\n    if (!opts.fallback) {\n      clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n    } else {\n      clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n    }\n    if (opts.libName && opts.libVersion) {\n      clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n    }\n    // Load the applicable protos.\n    this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n    // This API contains \"path templates\"; forward-slash-separated\n    // identifiers to uniquely identify resources within the API.\n    // Create useful helper objects for these.\n    this.pathTemplates = {\n      configPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/config'),\n      cryptoKeyPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}'),\n      cryptoKeyVersionPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}/cryptoKeyVersions/{crypto_key_version}'),\n      customClassPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/customClasses/{custom_class}'),\n      locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n      phraseSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/phraseSets/{phrase_set}'),\n      projectPathTemplate: new this._gaxModule.PathTemplate('projects/{project}'),\n      recognizerPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/recognizers/{recognizer}')\n    };\n    // Some of the methods on this service return \"paged\" results,\n    // (e.g. 50 results at a time, with tokens to get subsequent\n    // pages). Denote the keys used for pagination and results.\n    this.descriptors.page = {\n      listRecognizers: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'recognizers'),\n      listCustomClasses: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'customClasses'),\n      listPhraseSets: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'phraseSets')\n    };\n    // Some of the methods on this service provide streaming responses.\n    // Provide descriptors for these.\n    this.descriptors.stream = {\n      streamingRecognize: new this._gaxModule.StreamDescriptor(this._gaxModule.StreamType.BIDI_STREAMING, !!opts.fallback, !!opts.gaxServerStreamingRetries)\n    };\n    const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n    // This API contains \"long-running operations\", which return a\n    // an Operation object that allows for tracking of the operation,\n    // rather than holding a request open.\n    const lroOptions = {\n      auth: this.auth,\n      grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined\n    };\n    if (opts.fallback) {\n      lroOptions.protoJson = protoFilesRoot;\n      lroOptions.httpRules = [{\n        selector: 'google.cloud.location.Locations.GetLocation',\n        get: '/v2/{name=projects/*/locations/*}'\n      }, {\n        selector: 'google.cloud.location.Locations.ListLocations',\n        get: '/v2/{name=projects/*}/locations'\n      }, {\n        selector: 'google.longrunning.Operations.CancelOperation',\n        post: '/v2/{name=projects/*/locations/*/operations/*}:cancel',\n        body: '*'\n      }, {\n        selector: 'google.longrunning.Operations.DeleteOperation',\n        delete: '/v2/{name=projects/*/locations/*/operations/*}'\n      }, {\n        selector: 'google.longrunning.Operations.GetOperation',\n        get: '/v2/{name=projects/*/locations/*/operations/*}'\n      }, {\n        selector: 'google.longrunning.Operations.ListOperations',\n        get: '/v2/{name=projects/*/locations/*}/operations'\n      }];\n    }\n    this.operationsClient = this._gaxModule.lro(lroOptions).operationsClient(opts);\n    const createRecognizerResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.Recognizer');\n    const createRecognizerMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n    const updateRecognizerResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.Recognizer');\n    const updateRecognizerMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n    const deleteRecognizerResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.Recognizer');\n    const deleteRecognizerMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n    const undeleteRecognizerResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.Recognizer');\n    const undeleteRecognizerMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n    const batchRecognizeResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.BatchRecognizeResponse');\n    const batchRecognizeMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n    const createCustomClassResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.CustomClass');\n    const createCustomClassMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n    const updateCustomClassResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.CustomClass');\n    const updateCustomClassMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n    const deleteCustomClassResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.CustomClass');\n    const deleteCustomClassMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n    const undeleteCustomClassResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.CustomClass');\n    const undeleteCustomClassMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n    const createPhraseSetResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.PhraseSet');\n    const createPhraseSetMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n    const updatePhraseSetResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.PhraseSet');\n    const updatePhraseSetMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n    const deletePhraseSetResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.PhraseSet');\n    const deletePhraseSetMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n    const undeletePhraseSetResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.PhraseSet');\n    const undeletePhraseSetMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n    this.descriptors.longrunning = {\n      createRecognizer: new this._gaxModule.LongrunningDescriptor(this.operationsClient, createRecognizerResponse.decode.bind(createRecognizerResponse), createRecognizerMetadata.decode.bind(createRecognizerMetadata)),\n      updateRecognizer: new this._gaxModule.LongrunningDescriptor(this.operationsClient, updateRecognizerResponse.decode.bind(updateRecognizerResponse), updateRecognizerMetadata.decode.bind(updateRecognizerMetadata)),\n      deleteRecognizer: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deleteRecognizerResponse.decode.bind(deleteRecognizerResponse), deleteRecognizerMetadata.decode.bind(deleteRecognizerMetadata)),\n      undeleteRecognizer: new this._gaxModule.LongrunningDescriptor(this.operationsClient, undeleteRecognizerResponse.decode.bind(undeleteRecognizerResponse), undeleteRecognizerMetadata.decode.bind(undeleteRecognizerMetadata)),\n      batchRecognize: new this._gaxModule.LongrunningDescriptor(this.operationsClient, batchRecognizeResponse.decode.bind(batchRecognizeResponse), batchRecognizeMetadata.decode.bind(batchRecognizeMetadata)),\n      createCustomClass: new this._gaxModule.LongrunningDescriptor(this.operationsClient, createCustomClassResponse.decode.bind(createCustomClassResponse), createCustomClassMetadata.decode.bind(createCustomClassMetadata)),\n      updateCustomClass: new this._gaxModule.LongrunningDescriptor(this.operationsClient, updateCustomClassResponse.decode.bind(updateCustomClassResponse), updateCustomClassMetadata.decode.bind(updateCustomClassMetadata)),\n      deleteCustomClass: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deleteCustomClassResponse.decode.bind(deleteCustomClassResponse), deleteCustomClassMetadata.decode.bind(deleteCustomClassMetadata)),\n      undeleteCustomClass: new this._gaxModule.LongrunningDescriptor(this.operationsClient, undeleteCustomClassResponse.decode.bind(undeleteCustomClassResponse), undeleteCustomClassMetadata.decode.bind(undeleteCustomClassMetadata)),\n      createPhraseSet: new this._gaxModule.LongrunningDescriptor(this.operationsClient, createPhraseSetResponse.decode.bind(createPhraseSetResponse), createPhraseSetMetadata.decode.bind(createPhraseSetMetadata)),\n      updatePhraseSet: new this._gaxModule.LongrunningDescriptor(this.operationsClient, updatePhraseSetResponse.decode.bind(updatePhraseSetResponse), updatePhraseSetMetadata.decode.bind(updatePhraseSetMetadata)),\n      deletePhraseSet: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deletePhraseSetResponse.decode.bind(deletePhraseSetResponse), deletePhraseSetMetadata.decode.bind(deletePhraseSetMetadata)),\n      undeletePhraseSet: new this._gaxModule.LongrunningDescriptor(this.operationsClient, undeletePhraseSetResponse.decode.bind(undeletePhraseSetResponse), undeletePhraseSetMetadata.decode.bind(undeletePhraseSetMetadata))\n    };\n    // Put together the default options sent with requests.\n    this._defaults = this._gaxGrpc.constructSettings('google.cloud.speech.v2.Speech', gapicConfig, opts.clientConfig || {}, {\n      'x-goog-api-client': clientHeader.join(' ')\n    });\n    // Set up a dictionary of \"inner API calls\"; the core implementation\n    // of calling the API is handled in `google-gax`, with this code\n    // merely providing the destination and request information.\n    this.innerApiCalls = {};\n    // Add a warn function to the client constructor so it can be easily tested.\n    this.warn = this._gaxModule.warn;\n  }\n  /**\n   * Initialize the client.\n   * Performs asynchronous operations (such as authentication) and prepares the client.\n   * This function will be called automatically when any class method is called for the\n   * first time, but if you need to initialize it before calling an actual method,\n   * feel free to call initialize() directly.\n   *\n   * You can await on this method if you want to make sure the client is initialized.\n   *\n   * @returns {Promise} A promise that resolves to an authenticated service stub.\n   */\n  initialize() {\n    // If the client stub promise is already initialized, return immediately.\n    if (this.speechStub) {\n      return this.speechStub;\n    }\n    // Put together the \"service stub\" for\n    // google.cloud.speech.v2.Speech.\n    this.speechStub = this._gaxGrpc.createStub(this._opts.fallback ? this._protos.lookupService('google.cloud.speech.v2.Speech') :\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    this._protos.google.cloud.speech.v2.Speech, this._opts, this._providedCustomServicePath);\n    // Iterate over each of the methods that the service provides\n    // and create an API call method for each.\n    const speechStubMethods = ['createRecognizer', 'listRecognizers', 'getRecognizer', 'updateRecognizer', 'deleteRecognizer', 'undeleteRecognizer', 'recognize', 'streamingRecognize', 'batchRecognize', 'getConfig', 'updateConfig', 'createCustomClass', 'listCustomClasses', 'getCustomClass', 'updateCustomClass', 'deleteCustomClass', 'undeleteCustomClass', 'createPhraseSet', 'listPhraseSets', 'getPhraseSet', 'updatePhraseSet', 'deletePhraseSet', 'undeletePhraseSet'];\n    for (const methodName of speechStubMethods) {\n      const callPromise = this.speechStub.then(stub => (...args) => {\n        if (this._terminated) {\n          if (methodName in this.descriptors.stream) {\n            const stream = new stream_1.PassThrough({\n              objectMode: true\n            });\n            setImmediate(() => {\n              stream.emit('error', new this._gaxModule.GoogleError('The client has already been closed.'));\n            });\n            return stream;\n          }\n          return Promise.reject('The client has already been closed.');\n        }\n        const func = stub[methodName];\n        return func.apply(stub, args);\n      }, err => () => {\n        throw err;\n      });\n      const descriptor = this.descriptors.page[methodName] || this.descriptors.stream[methodName] || this.descriptors.longrunning[methodName] || undefined;\n      const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n      this.innerApiCalls[methodName] = apiCall;\n    }\n    return this.speechStub;\n  }\n  /**\n   * The DNS address for this API service.\n   * @deprecated Use the apiEndpoint method of the client instance.\n   * @returns {string} The DNS address for this service.\n   */\n  static get servicePath() {\n    if (typeof process === 'object' && typeof process.emitWarning === 'function') {\n      process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n    }\n    return 'speech.googleapis.com';\n  }\n  /**\n   * The DNS address for this API service - same as servicePath.\n   * @deprecated Use the apiEndpoint method of the client instance.\n   * @returns {string} The DNS address for this service.\n   */\n  static get apiEndpoint() {\n    if (typeof process === 'object' && typeof process.emitWarning === 'function') {\n      process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n    }\n    return 'speech.googleapis.com';\n  }\n  /**\n   * The DNS address for this API service.\n   * @returns {string} The DNS address for this service.\n   */\n  get apiEndpoint() {\n    return this._servicePath;\n  }\n  get universeDomain() {\n    return this._universeDomain;\n  }\n  /**\n   * The port for this API service.\n   * @returns {number} The default port for this service.\n   */\n  static get port() {\n    return 443;\n  }\n  /**\n   * The scopes needed to make gRPC calls for every method defined\n   * in this service.\n   * @returns {string[]} List of default scopes.\n   */\n  static get scopes() {\n    return ['https://www.googleapis.com/auth/cloud-platform'];\n  }\n  /**\n   * Return the project ID used by this class.\n   * @returns {Promise} A promise that resolves to string containing the project ID.\n   */\n  getProjectId(callback) {\n    if (callback) {\n      this.auth.getProjectId(callback);\n      return;\n    }\n    return this.auth.getProjectId();\n  }\n  getRecognizer(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getRecognizer(request, options, callback);\n  }\n  recognize(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      recognizer: (_a = request.recognizer) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.recognize(request, options, callback);\n  }\n  getConfig(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getConfig(request, options, callback);\n  }\n  updateConfig(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      'config.name': (_a = request.config.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.updateConfig(request, options, callback);\n  }\n  getCustomClass(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getCustomClass(request, options, callback);\n  }\n  getPhraseSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.getPhraseSet(request, options, callback);\n  }\n  /**\n   * Performs bidirectional streaming speech recognition: receive results while\n   * sending audio. This method is only available via the gRPC API (not REST).\n   *\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which is both readable and writable. It accepts objects\n   *   representing {@link protos.google.cloud.speech.v2.StreamingRecognizeRequest|StreamingRecognizeRequest} for write() method, and\n   *   will emit objects representing {@link protos.google.cloud.speech.v2.StreamingRecognizeResponse|StreamingRecognizeResponse} on 'data' event asynchronously.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#bi-directional-streaming | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.streaming_recognize.js</caption>\n   * region_tag:speech_v2_generated_Speech_StreamingRecognize_async\n   */\n  _streamingRecognize(options) {\n    this.initialize();\n    return this.innerApiCalls.streamingRecognize(null, options);\n  }\n  createRecognizer(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createRecognizer(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `createRecognizer()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.create_recognizer.js</caption>\n   * region_tag:speech_v2_generated_Speech_CreateRecognizer_async\n   */\n  async checkCreateRecognizerProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.createRecognizer, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  updateRecognizer(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      'recognizer.name': (_a = request.recognizer.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.updateRecognizer(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `updateRecognizer()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.update_recognizer.js</caption>\n   * region_tag:speech_v2_generated_Speech_UpdateRecognizer_async\n   */\n  async checkUpdateRecognizerProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.updateRecognizer, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  deleteRecognizer(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteRecognizer(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `deleteRecognizer()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.delete_recognizer.js</caption>\n   * region_tag:speech_v2_generated_Speech_DeleteRecognizer_async\n   */\n  async checkDeleteRecognizerProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deleteRecognizer, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  undeleteRecognizer(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.undeleteRecognizer(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `undeleteRecognizer()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.undelete_recognizer.js</caption>\n   * region_tag:speech_v2_generated_Speech_UndeleteRecognizer_async\n   */\n  async checkUndeleteRecognizerProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.undeleteRecognizer, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  batchRecognize(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      recognizer: (_a = request.recognizer) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.batchRecognize(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `batchRecognize()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.batch_recognize.js</caption>\n   * region_tag:speech_v2_generated_Speech_BatchRecognize_async\n   */\n  async checkBatchRecognizeProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.batchRecognize, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  createCustomClass(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createCustomClass(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `createCustomClass()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.create_custom_class.js</caption>\n   * region_tag:speech_v2_generated_Speech_CreateCustomClass_async\n   */\n  async checkCreateCustomClassProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.createCustomClass, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  updateCustomClass(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      'custom_class.name': (_a = request.customClass.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.updateCustomClass(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `updateCustomClass()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.update_custom_class.js</caption>\n   * region_tag:speech_v2_generated_Speech_UpdateCustomClass_async\n   */\n  async checkUpdateCustomClassProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.updateCustomClass, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  deleteCustomClass(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deleteCustomClass(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `deleteCustomClass()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.delete_custom_class.js</caption>\n   * region_tag:speech_v2_generated_Speech_DeleteCustomClass_async\n   */\n  async checkDeleteCustomClassProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deleteCustomClass, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  undeleteCustomClass(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.undeleteCustomClass(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `undeleteCustomClass()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.undelete_custom_class.js</caption>\n   * region_tag:speech_v2_generated_Speech_UndeleteCustomClass_async\n   */\n  async checkUndeleteCustomClassProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.undeleteCustomClass, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  createPhraseSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.createPhraseSet(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `createPhraseSet()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.create_phrase_set.js</caption>\n   * region_tag:speech_v2_generated_Speech_CreatePhraseSet_async\n   */\n  async checkCreatePhraseSetProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.createPhraseSet, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  updatePhraseSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      'phrase_set.name': (_a = request.phraseSet.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.updatePhraseSet(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `updatePhraseSet()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.update_phrase_set.js</caption>\n   * region_tag:speech_v2_generated_Speech_UpdatePhraseSet_async\n   */\n  async checkUpdatePhraseSetProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.updatePhraseSet, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  deletePhraseSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.deletePhraseSet(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `deletePhraseSet()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.delete_phrase_set.js</caption>\n   * region_tag:speech_v2_generated_Speech_DeletePhraseSet_async\n   */\n  async checkDeletePhraseSetProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deletePhraseSet, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  undeletePhraseSet(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      name: (_a = request.name) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.undeletePhraseSet(request, options, callback);\n  }\n  /**\n   * Check the status of the long running operation returned by `undeletePhraseSet()`.\n   * @param {String} name\n   *   The operation name that will be passed.\n   * @returns {Promise} - The promise which resolves to an object.\n   *   The decoded operation object has result and metadata field to get information from.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.undelete_phrase_set.js</caption>\n   * region_tag:speech_v2_generated_Speech_UndeletePhraseSet_async\n   */\n  async checkUndeletePhraseSetProgress(name) {\n    const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({\n      name\n    });\n    const [operation] = await this.operationsClient.getOperation(request);\n    const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.undeletePhraseSet, this._gaxModule.createDefaultBackoffSettings());\n    return decodeOperation;\n  }\n  listRecognizers(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listRecognizers(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The project and location of Recognizers to list. The expected\n   *   format is `projects/{project}/locations/{location}`.\n   * @param {number} request.pageSize\n   *   The maximum number of Recognizers to return. The service may return fewer\n   *   than this value. If unspecified, at most 5 Recognizers will be returned.\n   *   The maximum value is 100; values above 100 will be coerced to 100.\n   * @param {string} request.pageToken\n   *   A page token, received from a previous\n   *   {@link protos.google.cloud.speech.v2.Speech.ListRecognizers|ListRecognizers} call.\n   *   Provide this to retrieve the subsequent page.\n   *\n   *   When paginating, all other parameters provided to\n   *   {@link protos.google.cloud.speech.v2.Speech.ListRecognizers|ListRecognizers} must match\n   *   the call that provided the page token.\n   * @param {boolean} request.showDeleted\n   *   Whether, or not, to show resources that have been deleted.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.speech.v2.Recognizer|Recognizer} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listRecognizersAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n  listRecognizersStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listRecognizers'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listRecognizers.createStream(this.innerApiCalls.listRecognizers, request, callSettings);\n  }\n  /**\n   * Equivalent to `listRecognizers`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The project and location of Recognizers to list. The expected\n   *   format is `projects/{project}/locations/{location}`.\n   * @param {number} request.pageSize\n   *   The maximum number of Recognizers to return. The service may return fewer\n   *   than this value. If unspecified, at most 5 Recognizers will be returned.\n   *   The maximum value is 100; values above 100 will be coerced to 100.\n   * @param {string} request.pageToken\n   *   A page token, received from a previous\n   *   {@link protos.google.cloud.speech.v2.Speech.ListRecognizers|ListRecognizers} call.\n   *   Provide this to retrieve the subsequent page.\n   *\n   *   When paginating, all other parameters provided to\n   *   {@link protos.google.cloud.speech.v2.Speech.ListRecognizers|ListRecognizers} must match\n   *   the call that provided the page token.\n   * @param {boolean} request.showDeleted\n   *   Whether, or not, to show resources that have been deleted.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.speech.v2.Recognizer|Recognizer}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.list_recognizers.js</caption>\n   * region_tag:speech_v2_generated_Speech_ListRecognizers_async\n   */\n  listRecognizersAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listRecognizers'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listRecognizers.asyncIterate(this.innerApiCalls['listRecognizers'], request, callSettings);\n  }\n  listCustomClasses(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listCustomClasses(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The project and location of CustomClass resources to list. The\n   *   expected format is `projects/{project}/locations/{location}`.\n   * @param {number} request.pageSize\n   *   Number of results per requests. A valid page_size ranges from 0 to 100\n   *   inclusive. If the page_size is zero or unspecified, a page size of 5 will\n   *   be chosen. If the page size exceeds 100, it will be coerced down to 100.\n   *   Note that a call might return fewer results than the requested page size.\n   * @param {string} request.pageToken\n   *   A page token, received from a previous\n   *   {@link protos.google.cloud.speech.v2.Speech.ListCustomClasses|ListCustomClasses} call.\n   *   Provide this to retrieve the subsequent page.\n   *\n   *   When paginating, all other parameters provided to\n   *   {@link protos.google.cloud.speech.v2.Speech.ListCustomClasses|ListCustomClasses} must\n   *   match the call that provided the page token.\n   * @param {boolean} request.showDeleted\n   *   Whether, or not, to show resources that have been deleted.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.speech.v2.CustomClass|CustomClass} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listCustomClassesAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n  listCustomClassesStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listCustomClasses'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listCustomClasses.createStream(this.innerApiCalls.listCustomClasses, request, callSettings);\n  }\n  /**\n   * Equivalent to `listCustomClasses`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The project and location of CustomClass resources to list. The\n   *   expected format is `projects/{project}/locations/{location}`.\n   * @param {number} request.pageSize\n   *   Number of results per requests. A valid page_size ranges from 0 to 100\n   *   inclusive. If the page_size is zero or unspecified, a page size of 5 will\n   *   be chosen. If the page size exceeds 100, it will be coerced down to 100.\n   *   Note that a call might return fewer results than the requested page size.\n   * @param {string} request.pageToken\n   *   A page token, received from a previous\n   *   {@link protos.google.cloud.speech.v2.Speech.ListCustomClasses|ListCustomClasses} call.\n   *   Provide this to retrieve the subsequent page.\n   *\n   *   When paginating, all other parameters provided to\n   *   {@link protos.google.cloud.speech.v2.Speech.ListCustomClasses|ListCustomClasses} must\n   *   match the call that provided the page token.\n   * @param {boolean} request.showDeleted\n   *   Whether, or not, to show resources that have been deleted.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.speech.v2.CustomClass|CustomClass}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.list_custom_classes.js</caption>\n   * region_tag:speech_v2_generated_Speech_ListCustomClasses_async\n   */\n  listCustomClassesAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listCustomClasses'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listCustomClasses.asyncIterate(this.innerApiCalls['listCustomClasses'], request, callSettings);\n  }\n  listPhraseSets(request, optionsOrCallback, callback) {\n    var _a;\n    request = request || {};\n    let options;\n    if (typeof optionsOrCallback === 'function' && callback === undefined) {\n      callback = optionsOrCallback;\n      options = {};\n    } else {\n      options = optionsOrCallback;\n    }\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    this.initialize();\n    return this.innerApiCalls.listPhraseSets(request, options, callback);\n  }\n  /**\n   * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The project and location of PhraseSet resources to list. The\n   *   expected format is `projects/{project}/locations/{location}`.\n   * @param {number} request.pageSize\n   *   The maximum number of PhraseSets to return. The service may return fewer\n   *   than this value. If unspecified, at most 5 PhraseSets will be returned.\n   *   The maximum value is 100; values above 100 will be coerced to 100.\n   * @param {string} request.pageToken\n   *   A page token, received from a previous\n   *   {@link protos.google.cloud.speech.v2.Speech.ListPhraseSets|ListPhraseSets} call.\n   *   Provide this to retrieve the subsequent page.\n   *\n   *   When paginating, all other parameters provided to\n   *   {@link protos.google.cloud.speech.v2.Speech.ListPhraseSets|ListPhraseSets} must match\n   *   the call that provided the page token.\n   * @param {boolean} request.showDeleted\n   *   Whether, or not, to show resources that have been deleted.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Stream}\n   *   An object stream which emits an object representing {@link protos.google.cloud.speech.v2.PhraseSet|PhraseSet} on 'data' event.\n   *   The client library will perform auto-pagination by default: it will call the API as many\n   *   times as needed. Note that it can affect your quota.\n   *   We recommend using `listPhraseSetsAsync()`\n   *   method described below for async iteration which you can stop as needed.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   */\n  listPhraseSetsStream(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listPhraseSets'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listPhraseSets.createStream(this.innerApiCalls.listPhraseSets, request, callSettings);\n  }\n  /**\n   * Equivalent to `listPhraseSets`, but returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.parent\n   *   Required. The project and location of PhraseSet resources to list. The\n   *   expected format is `projects/{project}/locations/{location}`.\n   * @param {number} request.pageSize\n   *   The maximum number of PhraseSets to return. The service may return fewer\n   *   than this value. If unspecified, at most 5 PhraseSets will be returned.\n   *   The maximum value is 100; values above 100 will be coerced to 100.\n   * @param {string} request.pageToken\n   *   A page token, received from a previous\n   *   {@link protos.google.cloud.speech.v2.Speech.ListPhraseSets|ListPhraseSets} call.\n   *   Provide this to retrieve the subsequent page.\n   *\n   *   When paginating, all other parameters provided to\n   *   {@link protos.google.cloud.speech.v2.Speech.ListPhraseSets|ListPhraseSets} must match\n   *   the call that provided the page token.\n   * @param {boolean} request.showDeleted\n   *   Whether, or not, to show resources that have been deleted.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link protos.google.cloud.speech.v2.PhraseSet|PhraseSet}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example <caption>include:samples/generated/v2/speech.list_phrase_sets.js</caption>\n   * region_tag:speech_v2_generated_Speech_ListPhraseSets_async\n   */\n  listPhraseSetsAsync(request, options) {\n    var _a;\n    request = request || {};\n    options = options || {};\n    options.otherArgs = options.otherArgs || {};\n    options.otherArgs.headers = options.otherArgs.headers || {};\n    options.otherArgs.headers['x-goog-request-params'] = this._gaxModule.routingHeader.fromParams({\n      parent: (_a = request.parent) !== null && _a !== void 0 ? _a : ''\n    });\n    const defaultCallSettings = this._defaults['listPhraseSets'];\n    const callSettings = defaultCallSettings.merge(options);\n    this.initialize();\n    return this.descriptors.page.listPhraseSets.asyncIterate(this.innerApiCalls['listPhraseSets'], request, callSettings);\n  }\n  /**\n   * Gets information about a location.\n   *\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.name\n   *   Resource name for the location.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.\n   * @returns {Promise} - The promise which resolves to an array.\n   *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }\n   *   for more details and examples.\n   * @example\n   * ```\n   * const [response] = await client.getLocation(request);\n   * ```\n   */\n  getLocation(request, options, callback) {\n    return this.locationsClient.getLocation(request, options, callback);\n  }\n  /**\n   * Lists information about the supported locations for this service. Returns an iterable object.\n   *\n   * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n   * @param {Object} request\n   *   The request object that will be sent.\n   * @param {string} request.name\n   *   The resource that owns the locations collection, if applicable.\n   * @param {string} request.filter\n   *   The standard list filter.\n   * @param {number} request.pageSize\n   *   The standard list page size.\n   * @param {string} request.pageToken\n   *   The standard list page token.\n   * @param {object} [options]\n   *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n   * @returns {Object}\n   *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n   *   When you iterate the returned iterable, each element will be an object representing\n   *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,\n   *   so you can stop the iteration when you don't need more results.\n   *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n   *   for more details and examples.\n   * @example\n   * ```\n   * const iterable = client.listLocationsAsync(request);\n   * for await (const response of iterable) {\n   *   // process response\n   * }\n   * ```\n   */\n  listLocationsAsync(request, options) {\n    return this.locationsClient.listLocationsAsync(request, options);\n  }\n  /**\n   * Gets the latest state of a long-running operation.  Clients can use this\n   * method to poll the operation result at intervals as recommended by the API\n   * service.\n   *\n   * @param {Object} request - The request object that will be sent.\n   * @param {string} request.name - The name of the operation resource.\n   * @param {Object=} options\n   *   Optional parameters. You can override the default settings for this call,\n   *   e.g, timeout, retries, paginations, etc. See {@link\n   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n   *   for the details.\n   * @param {function(?Error, ?Object)=} callback\n   *   The function which will be called with the result of the API call.\n   *\n   *   The second parameter to the callback is an object representing\n   *   {@link google.longrunning.Operation | google.longrunning.Operation}.\n   * @return {Promise} - The promise which resolves to an array.\n   *   The first element of the array is an object representing\n   * {@link google.longrunning.Operation | google.longrunning.Operation}.\n   * The promise has a method named \"cancel\" which cancels the ongoing API call.\n   *\n   * @example\n   * ```\n   * const client = longrunning.operationsClient();\n   * const name = '';\n   * const [response] = await client.getOperation({name});\n   * // doThingsWith(response)\n   * ```\n   */\n  getOperation(request, options, callback) {\n    return this.operationsClient.getOperation(request, options, callback);\n  }\n  /**\n   * Lists operations that match the specified filter in the request. If the\n   * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.\n   *\n   * For-await-of syntax is used with the iterable to recursively get response element on-demand.\n   *\n   * @param {Object} request - The request object that will be sent.\n   * @param {string} request.name - The name of the operation collection.\n   * @param {string} request.filter - The standard list filter.\n   * @param {number=} request.pageSize -\n   *   The maximum number of resources contained in the underlying API\n   *   response. If page streaming is performed per-resource, this\n   *   parameter does not affect the return value. If page streaming is\n   *   performed per-page, this determines the maximum number of\n   *   resources in a page.\n   * @param {Object=} options\n   *   Optional parameters. You can override the default settings for this call,\n   *   e.g, timeout, retries, paginations, etc. See {@link\n   *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n   *   details.\n   * @returns {Object}\n   *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.\n   *\n   * @example\n   * ```\n   * const client = longrunning.operationsClient();\n   * for await (const response of client.listOperationsAsync(request));\n   * // doThingsWith(response)\n   * ```\n   */\n  listOperationsAsync(request, options) {\n    return this.operationsClient.listOperationsAsync(request, options);\n  }\n  /**\n   * Starts asynchronous cancellation on a long-running operation.  The server\n   * makes a best effort to cancel the operation, but success is not\n   * guaranteed.  If the server doesn't support this method, it returns\n   * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use\n   * {@link Operations.GetOperation} or\n   * other methods to check whether the cancellation succeeded or whether the\n   * operation completed despite cancellation. On successful cancellation,\n   * the operation is not deleted; instead, it becomes an operation with\n   * an {@link Operation.error} value with a {@link google.rpc.Status.code} of\n   * 1, corresponding to `Code.CANCELLED`.\n   *\n   * @param {Object} request - The request object that will be sent.\n   * @param {string} request.name - The name of the operation resource to be cancelled.\n   * @param {Object=} options\n   *   Optional parameters. You can override the default settings for this call,\n   * e.g, timeout, retries, paginations, etc. See {@link\n   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n   * details.\n   * @param {function(?Error)=} callback\n   *   The function which will be called with the result of the API call.\n   * @return {Promise} - The promise which resolves when API call finishes.\n   *   The promise has a method named \"cancel\" which cancels the ongoing API\n   * call.\n   *\n   * @example\n   * ```\n   * const client = longrunning.operationsClient();\n   * await client.cancelOperation({name: ''});\n   * ```\n   */\n  cancelOperation(request, options, callback) {\n    return this.operationsClient.cancelOperation(request, options, callback);\n  }\n  /**\n   * Deletes a long-running operation. This method indicates that the client is\n   * no longer interested in the operation result. It does not cancel the\n   * operation. If the server doesn't support this method, it returns\n   * `google.rpc.Code.UNIMPLEMENTED`.\n   *\n   * @param {Object} request - The request object that will be sent.\n   * @param {string} request.name - The name of the operation resource to be deleted.\n   * @param {Object=} options\n   *   Optional parameters. You can override the default settings for this call,\n   * e.g, timeout, retries, paginations, etc. See {@link\n   * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n   * for the details.\n   * @param {function(?Error)=} callback\n   *   The function which will be called with the result of the API call.\n   * @return {Promise} - The promise which resolves when API call finishes.\n   *   The promise has a method named \"cancel\" which cancels the ongoing API\n   * call.\n   *\n   * @example\n   * ```\n   * const client = longrunning.operationsClient();\n   * await client.deleteOperation({name: ''});\n   * ```\n   */\n  deleteOperation(request, options, callback) {\n    return this.operationsClient.deleteOperation(request, options, callback);\n  }\n  // --------------------\n  // -- Path templates --\n  // --------------------\n  /**\n   * Return a fully-qualified config resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @returns {string} Resource name string.\n   */\n  configPath(project, location) {\n    return this.pathTemplates.configPathTemplate.render({\n      project: project,\n      location: location\n    });\n  }\n  /**\n   * Parse the project from Config resource.\n   *\n   * @param {string} configName\n   *   A fully-qualified path representing Config resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromConfigName(configName) {\n    return this.pathTemplates.configPathTemplate.match(configName).project;\n  }\n  /**\n   * Parse the location from Config resource.\n   *\n   * @param {string} configName\n   *   A fully-qualified path representing Config resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromConfigName(configName) {\n    return this.pathTemplates.configPathTemplate.match(configName).location;\n  }\n  /**\n   * Return a fully-qualified cryptoKey resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} key_ring\n   * @param {string} crypto_key\n   * @returns {string} Resource name string.\n   */\n  cryptoKeyPath(project, location, keyRing, cryptoKey) {\n    return this.pathTemplates.cryptoKeyPathTemplate.render({\n      project: project,\n      location: location,\n      key_ring: keyRing,\n      crypto_key: cryptoKey\n    });\n  }\n  /**\n   * Parse the project from CryptoKey resource.\n   *\n   * @param {string} cryptoKeyName\n   *   A fully-qualified path representing CryptoKey resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromCryptoKeyName(cryptoKeyName) {\n    return this.pathTemplates.cryptoKeyPathTemplate.match(cryptoKeyName).project;\n  }\n  /**\n   * Parse the location from CryptoKey resource.\n   *\n   * @param {string} cryptoKeyName\n   *   A fully-qualified path representing CryptoKey resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromCryptoKeyName(cryptoKeyName) {\n    return this.pathTemplates.cryptoKeyPathTemplate.match(cryptoKeyName).location;\n  }\n  /**\n   * Parse the key_ring from CryptoKey resource.\n   *\n   * @param {string} cryptoKeyName\n   *   A fully-qualified path representing CryptoKey resource.\n   * @returns {string} A string representing the key_ring.\n   */\n  matchKeyRingFromCryptoKeyName(cryptoKeyName) {\n    return this.pathTemplates.cryptoKeyPathTemplate.match(cryptoKeyName).key_ring;\n  }\n  /**\n   * Parse the crypto_key from CryptoKey resource.\n   *\n   * @param {string} cryptoKeyName\n   *   A fully-qualified path representing CryptoKey resource.\n   * @returns {string} A string representing the crypto_key.\n   */\n  matchCryptoKeyFromCryptoKeyName(cryptoKeyName) {\n    return this.pathTemplates.cryptoKeyPathTemplate.match(cryptoKeyName).crypto_key;\n  }\n  /**\n   * Return a fully-qualified cryptoKeyVersion resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} key_ring\n   * @param {string} crypto_key\n   * @param {string} crypto_key_version\n   * @returns {string} Resource name string.\n   */\n  cryptoKeyVersionPath(project, location, keyRing, cryptoKey, cryptoKeyVersion) {\n    return this.pathTemplates.cryptoKeyVersionPathTemplate.render({\n      project: project,\n      location: location,\n      key_ring: keyRing,\n      crypto_key: cryptoKey,\n      crypto_key_version: cryptoKeyVersion\n    });\n  }\n  /**\n   * Parse the project from CryptoKeyVersion resource.\n   *\n   * @param {string} cryptoKeyVersionName\n   *   A fully-qualified path representing CryptoKeyVersion resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromCryptoKeyVersionName(cryptoKeyVersionName) {\n    return this.pathTemplates.cryptoKeyVersionPathTemplate.match(cryptoKeyVersionName).project;\n  }\n  /**\n   * Parse the location from CryptoKeyVersion resource.\n   *\n   * @param {string} cryptoKeyVersionName\n   *   A fully-qualified path representing CryptoKeyVersion resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromCryptoKeyVersionName(cryptoKeyVersionName) {\n    return this.pathTemplates.cryptoKeyVersionPathTemplate.match(cryptoKeyVersionName).location;\n  }\n  /**\n   * Parse the key_ring from CryptoKeyVersion resource.\n   *\n   * @param {string} cryptoKeyVersionName\n   *   A fully-qualified path representing CryptoKeyVersion resource.\n   * @returns {string} A string representing the key_ring.\n   */\n  matchKeyRingFromCryptoKeyVersionName(cryptoKeyVersionName) {\n    return this.pathTemplates.cryptoKeyVersionPathTemplate.match(cryptoKeyVersionName).key_ring;\n  }\n  /**\n   * Parse the crypto_key from CryptoKeyVersion resource.\n   *\n   * @param {string} cryptoKeyVersionName\n   *   A fully-qualified path representing CryptoKeyVersion resource.\n   * @returns {string} A string representing the crypto_key.\n   */\n  matchCryptoKeyFromCryptoKeyVersionName(cryptoKeyVersionName) {\n    return this.pathTemplates.cryptoKeyVersionPathTemplate.match(cryptoKeyVersionName).crypto_key;\n  }\n  /**\n   * Parse the crypto_key_version from CryptoKeyVersion resource.\n   *\n   * @param {string} cryptoKeyVersionName\n   *   A fully-qualified path representing CryptoKeyVersion resource.\n   * @returns {string} A string representing the crypto_key_version.\n   */\n  matchCryptoKeyVersionFromCryptoKeyVersionName(cryptoKeyVersionName) {\n    return this.pathTemplates.cryptoKeyVersionPathTemplate.match(cryptoKeyVersionName).crypto_key_version;\n  }\n  /**\n   * Return a fully-qualified customClass resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} custom_class\n   * @returns {string} Resource name string.\n   */\n  customClassPath(project, location, customClass) {\n    return this.pathTemplates.customClassPathTemplate.render({\n      project: project,\n      location: location,\n      custom_class: customClass\n    });\n  }\n  /**\n   * Parse the project from CustomClass resource.\n   *\n   * @param {string} customClassName\n   *   A fully-qualified path representing CustomClass resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromCustomClassName(customClassName) {\n    return this.pathTemplates.customClassPathTemplate.match(customClassName).project;\n  }\n  /**\n   * Parse the location from CustomClass resource.\n   *\n   * @param {string} customClassName\n   *   A fully-qualified path representing CustomClass resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromCustomClassName(customClassName) {\n    return this.pathTemplates.customClassPathTemplate.match(customClassName).location;\n  }\n  /**\n   * Parse the custom_class from CustomClass resource.\n   *\n   * @param {string} customClassName\n   *   A fully-qualified path representing CustomClass resource.\n   * @returns {string} A string representing the custom_class.\n   */\n  matchCustomClassFromCustomClassName(customClassName) {\n    return this.pathTemplates.customClassPathTemplate.match(customClassName).custom_class;\n  }\n  /**\n   * Return a fully-qualified location resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @returns {string} Resource name string.\n   */\n  locationPath(project, location) {\n    return this.pathTemplates.locationPathTemplate.render({\n      project: project,\n      location: location\n    });\n  }\n  /**\n   * Parse the project from Location resource.\n   *\n   * @param {string} locationName\n   *   A fully-qualified path representing Location resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromLocationName(locationName) {\n    return this.pathTemplates.locationPathTemplate.match(locationName).project;\n  }\n  /**\n   * Parse the location from Location resource.\n   *\n   * @param {string} locationName\n   *   A fully-qualified path representing Location resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromLocationName(locationName) {\n    return this.pathTemplates.locationPathTemplate.match(locationName).location;\n  }\n  /**\n   * Return a fully-qualified phraseSet resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} phrase_set\n   * @returns {string} Resource name string.\n   */\n  phraseSetPath(project, location, phraseSet) {\n    return this.pathTemplates.phraseSetPathTemplate.render({\n      project: project,\n      location: location,\n      phrase_set: phraseSet\n    });\n  }\n  /**\n   * Parse the project from PhraseSet resource.\n   *\n   * @param {string} phraseSetName\n   *   A fully-qualified path representing PhraseSet resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromPhraseSetName(phraseSetName) {\n    return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName).project;\n  }\n  /**\n   * Parse the location from PhraseSet resource.\n   *\n   * @param {string} phraseSetName\n   *   A fully-qualified path representing PhraseSet resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromPhraseSetName(phraseSetName) {\n    return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName).location;\n  }\n  /**\n   * Parse the phrase_set from PhraseSet resource.\n   *\n   * @param {string} phraseSetName\n   *   A fully-qualified path representing PhraseSet resource.\n   * @returns {string} A string representing the phrase_set.\n   */\n  matchPhraseSetFromPhraseSetName(phraseSetName) {\n    return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName).phrase_set;\n  }\n  /**\n   * Return a fully-qualified project resource name string.\n   *\n   * @param {string} project\n   * @returns {string} Resource name string.\n   */\n  projectPath(project) {\n    return this.pathTemplates.projectPathTemplate.render({\n      project: project\n    });\n  }\n  /**\n   * Parse the project from Project resource.\n   *\n   * @param {string} projectName\n   *   A fully-qualified path representing Project resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromProjectName(projectName) {\n    return this.pathTemplates.projectPathTemplate.match(projectName).project;\n  }\n  /**\n   * Return a fully-qualified recognizer resource name string.\n   *\n   * @param {string} project\n   * @param {string} location\n   * @param {string} recognizer\n   * @returns {string} Resource name string.\n   */\n  recognizerPath(project, location, recognizer) {\n    return this.pathTemplates.recognizerPathTemplate.render({\n      project: project,\n      location: location,\n      recognizer: recognizer\n    });\n  }\n  /**\n   * Parse the project from Recognizer resource.\n   *\n   * @param {string} recognizerName\n   *   A fully-qualified path representing Recognizer resource.\n   * @returns {string} A string representing the project.\n   */\n  matchProjectFromRecognizerName(recognizerName) {\n    return this.pathTemplates.recognizerPathTemplate.match(recognizerName).project;\n  }\n  /**\n   * Parse the location from Recognizer resource.\n   *\n   * @param {string} recognizerName\n   *   A fully-qualified path representing Recognizer resource.\n   * @returns {string} A string representing the location.\n   */\n  matchLocationFromRecognizerName(recognizerName) {\n    return this.pathTemplates.recognizerPathTemplate.match(recognizerName).location;\n  }\n  /**\n   * Parse the recognizer from Recognizer resource.\n   *\n   * @param {string} recognizerName\n   *   A fully-qualified path representing Recognizer resource.\n   * @returns {string} A string representing the recognizer.\n   */\n  matchRecognizerFromRecognizerName(recognizerName) {\n    return this.pathTemplates.recognizerPathTemplate.match(recognizerName).recognizer;\n  }\n  /**\n   * Terminate the gRPC channel and close the client.\n   *\n   * The client will no longer be usable and all future behavior is undefined.\n   * @returns {Promise} A promise that resolves when the client is closed.\n   */\n  close() {\n    if (this.speechStub && !this._terminated) {\n      return this.speechStub.then(stub => {\n        this._terminated = true;\n        stub.close();\n        this.locationsClient.close();\n        this.operationsClient.close();\n      });\n    }\n    return Promise.resolve();\n  }\n}\nexports.SpeechClient = SpeechClient;","map":{"version":3,"names":["Object","defineProperty","exports","value","SpeechClient","stream_1","require","jsonProtos","gapicConfig","version","constructor","opts","gaxInstance","_a","_b","_c","_d","_e","_terminated","descriptors","page","stream","longrunning","batching","staticMembers","universe_domain","universeDomain","Error","universeDomainEnvVar","process","env","undefined","_universeDomain","_servicePath","servicePath","apiEndpoint","_providedCustomServicePath","port","clientConfig","fallback","window","fetch","assign","numericEnums","scopes","_gaxModule","_gaxGrpc","GrpcClient","_opts","auth","useJWTAccessWithScope","defaultServicePath","defaultScopes","locationsClient","LocationsClient","clientHeader","push","versions","node","grpcVersion","libName","libVersion","_protos","loadProtoJSON","pathTemplates","configPathTemplate","PathTemplate","cryptoKeyPathTemplate","cryptoKeyVersionPathTemplate","customClassPathTemplate","locationPathTemplate","phraseSetPathTemplate","projectPathTemplate","recognizerPathTemplate","listRecognizers","PageDescriptor","listCustomClasses","listPhraseSets","streamingRecognize","StreamDescriptor","StreamType","BIDI_STREAMING","gaxServerStreamingRetries","protoFilesRoot","protobuf","Root","fromJSON","lroOptions","grpc","protoJson","httpRules","selector","get","post","body","delete","operationsClient","lro","createRecognizerResponse","lookup","createRecognizerMetadata","updateRecognizerResponse","updateRecognizerMetadata","deleteRecognizerResponse","deleteRecognizerMetadata","undeleteRecognizerResponse","undeleteRecognizerMetadata","batchRecognizeResponse","batchRecognizeMetadata","createCustomClassResponse","createCustomClassMetadata","updateCustomClassResponse","updateCustomClassMetadata","deleteCustomClassResponse","deleteCustomClassMetadata","undeleteCustomClassResponse","undeleteCustomClassMetadata","createPhraseSetResponse","createPhraseSetMetadata","updatePhraseSetResponse","updatePhraseSetMetadata","deletePhraseSetResponse","deletePhraseSetMetadata","undeletePhraseSetResponse","undeletePhraseSetMetadata","createRecognizer","LongrunningDescriptor","decode","bind","updateRecognizer","deleteRecognizer","undeleteRecognizer","batchRecognize","createCustomClass","updateCustomClass","deleteCustomClass","undeleteCustomClass","createPhraseSet","updatePhraseSet","deletePhraseSet","undeletePhraseSet","_defaults","constructSettings","join","innerApiCalls","warn","initialize","speechStub","createStub","lookupService","google","cloud","speech","v2","Speech","speechStubMethods","methodName","callPromise","then","stub","args","PassThrough","objectMode","setImmediate","emit","GoogleError","Promise","reject","func","apply","err","descriptor","apiCall","createApiCall","emitWarning","getProjectId","callback","getRecognizer","request","optionsOrCallback","options","otherArgs","headers","routingHeader","fromParams","name","recognize","recognizer","getConfig","updateConfig","config","getCustomClass","getPhraseSet","_streamingRecognize","parent","checkCreateRecognizerProgress","operationsProtos","GetOperationRequest","operation","getOperation","decodeOperation","Operation","createDefaultBackoffSettings","checkUpdateRecognizerProgress","checkDeleteRecognizerProgress","checkUndeleteRecognizerProgress","checkBatchRecognizeProgress","checkCreateCustomClassProgress","customClass","checkUpdateCustomClassProgress","checkDeleteCustomClassProgress","checkUndeleteCustomClassProgress","checkCreatePhraseSetProgress","phraseSet","checkUpdatePhraseSetProgress","checkDeletePhraseSetProgress","checkUndeletePhraseSetProgress","listRecognizersStream","defaultCallSettings","callSettings","merge","createStream","listRecognizersAsync","asyncIterate","listCustomClassesStream","listCustomClassesAsync","listPhraseSetsStream","listPhraseSetsAsync","getLocation","listLocationsAsync","listOperationsAsync","cancelOperation","deleteOperation","configPath","project","location","render","matchProjectFromConfigName","configName","match","matchLocationFromConfigName","cryptoKeyPath","keyRing","cryptoKey","key_ring","crypto_key","matchProjectFromCryptoKeyName","cryptoKeyName","matchLocationFromCryptoKeyName","matchKeyRingFromCryptoKeyName","matchCryptoKeyFromCryptoKeyName","cryptoKeyVersionPath","cryptoKeyVersion","crypto_key_version","matchProjectFromCryptoKeyVersionName","cryptoKeyVersionName","matchLocationFromCryptoKeyVersionName","matchKeyRingFromCryptoKeyVersionName","matchCryptoKeyFromCryptoKeyVersionName","matchCryptoKeyVersionFromCryptoKeyVersionName","customClassPath","custom_class","matchProjectFromCustomClassName","customClassName","matchLocationFromCustomClassName","matchCustomClassFromCustomClassName","locationPath","matchProjectFromLocationName","locationName","matchLocationFromLocationName","phraseSetPath","phrase_set","matchProjectFromPhraseSetName","phraseSetName","matchLocationFromPhraseSetName","matchPhraseSetFromPhraseSetName","projectPath","matchProjectFromProjectName","projectName","recognizerPath","matchProjectFromRecognizerName","recognizerName","matchLocationFromRecognizerName","matchRecognizerFromRecognizerName","close","resolve"],"sources":["C:/Users/emers/OneDrive/Desktop/Front-Futebol/node_modules/@google-cloud/speech/build/src/v2/speech_client.js"],"sourcesContent":["\"use strict\";\n// Copyright 2024 Google LLC\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n//     https://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n//\n// ** This file is automatically generated by gapic-generator-typescript. **\n// ** https://github.com/googleapis/gapic-generator-typescript **\n// ** All changes to this file may be overwritten. **\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.SpeechClient = void 0;\nconst stream_1 = require(\"stream\");\nconst jsonProtos = require(\"../../protos/protos.json\");\n/**\n * Client JSON configuration object, loaded from\n * `src/v2/speech_client_config.json`.\n * This file defines retry strategy and timeouts for all API methods in this library.\n */\nconst gapicConfig = require(\"./speech_client_config.json\");\nconst version = require('../../../package.json').version;\n/**\n *  Enables speech transcription and resource management.\n * @class\n * @memberof v2\n */\nclass SpeechClient {\n    /**\n     * Construct an instance of SpeechClient.\n     *\n     * @param {object} [options] - The configuration object.\n     * The options accepted by the constructor are described in detail\n     * in [this document](https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#creating-the-client-instance).\n     * The common options are:\n     * @param {object} [options.credentials] - Credentials object.\n     * @param {string} [options.credentials.client_email]\n     * @param {string} [options.credentials.private_key]\n     * @param {string} [options.email] - Account email address. Required when\n     *     using a .pem or .p12 keyFilename.\n     * @param {string} [options.keyFilename] - Full path to the a .json, .pem, or\n     *     .p12 key downloaded from the Google Developers Console. If you provide\n     *     a path to a JSON file, the projectId option below is not necessary.\n     *     NOTE: .pem and .p12 require you to specify options.email as well.\n     * @param {number} [options.port] - The port on which to connect to\n     *     the remote host.\n     * @param {string} [options.projectId] - The project ID from the Google\n     *     Developer's Console, e.g. 'grape-spaceship-123'. We will also check\n     *     the environment variable GCLOUD_PROJECT for your project ID. If your\n     *     app is running in an environment which supports\n     *     {@link https://developers.google.com/identity/protocols/application-default-credentials Application Default Credentials},\n     *     your project ID will be detected automatically.\n     * @param {string} [options.apiEndpoint] - The domain name of the\n     *     API remote host.\n     * @param {gax.ClientConfig} [options.clientConfig] - Client configuration override.\n     *     Follows the structure of {@link gapicConfig}.\n     * @param {boolean} [options.fallback] - Use HTTP/1.1 REST mode.\n     *     For more information, please check the\n     *     {@link https://github.com/googleapis/gax-nodejs/blob/main/client-libraries.md#http11-rest-api-mode documentation}.\n     * @param {gax} [gaxInstance]: loaded instance of `google-gax`. Useful if you\n     *     need to avoid loading the default gRPC version and want to use the fallback\n     *     HTTP implementation. Load only fallback version and pass it to the constructor:\n     *     ```\n     *     const gax = require('google-gax/build/src/fallback'); // avoids loading google-gax with gRPC\n     *     const client = new SpeechClient({fallback: true}, gax);\n     *     ```\n     */\n    constructor(opts, gaxInstance) {\n        var _a, _b, _c, _d, _e;\n        this._terminated = false;\n        this.descriptors = {\n            page: {},\n            stream: {},\n            longrunning: {},\n            batching: {},\n        };\n        // Ensure that options include all the required fields.\n        const staticMembers = this.constructor;\n        if ((opts === null || opts === void 0 ? void 0 : opts.universe_domain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universeDomain) &&\n            (opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== (opts === null || opts === void 0 ? void 0 : opts.universeDomain)) {\n            throw new Error('Please set either universe_domain or universeDomain, but not both.');\n        }\n        const universeDomainEnvVar = typeof process === 'object' && typeof process.env === 'object'\n            ? process.env['GOOGLE_CLOUD_UNIVERSE_DOMAIN']\n            : undefined;\n        this._universeDomain =\n            (_c = (_b = (_a = opts === null || opts === void 0 ? void 0 : opts.universeDomain) !== null && _a !== void 0 ? _a : opts === null || opts === void 0 ? void 0 : opts.universe_domain) !== null && _b !== void 0 ? _b : universeDomainEnvVar) !== null && _c !== void 0 ? _c : 'googleapis.com';\n        this._servicePath = 'speech.' + this._universeDomain;\n        const servicePath = (opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint) || this._servicePath;\n        this._providedCustomServicePath = !!((opts === null || opts === void 0 ? void 0 : opts.servicePath) || (opts === null || opts === void 0 ? void 0 : opts.apiEndpoint));\n        const port = (opts === null || opts === void 0 ? void 0 : opts.port) || staticMembers.port;\n        const clientConfig = (_d = opts === null || opts === void 0 ? void 0 : opts.clientConfig) !== null && _d !== void 0 ? _d : {};\n        const fallback = (_e = opts === null || opts === void 0 ? void 0 : opts.fallback) !== null && _e !== void 0 ? _e : (typeof window !== 'undefined' && typeof (window === null || window === void 0 ? void 0 : window.fetch) === 'function');\n        opts = Object.assign({ servicePath, port, clientConfig, fallback }, opts);\n        // Request numeric enum values if REST transport is used.\n        opts.numericEnums = true;\n        // If scopes are unset in options and we're connecting to a non-default endpoint, set scopes just in case.\n        if (servicePath !== this._servicePath && !('scopes' in opts)) {\n            opts['scopes'] = staticMembers.scopes;\n        }\n        // Load google-gax module synchronously if needed\n        if (!gaxInstance) {\n            gaxInstance = require('google-gax');\n        }\n        // Choose either gRPC or proto-over-HTTP implementation of google-gax.\n        this._gaxModule = opts.fallback ? gaxInstance.fallback : gaxInstance;\n        // Create a `gaxGrpc` object, with any grpc-specific options sent to the client.\n        this._gaxGrpc = new this._gaxModule.GrpcClient(opts);\n        // Save options to use in initialize() method.\n        this._opts = opts;\n        // Save the auth object to the client, for use by other methods.\n        this.auth = this._gaxGrpc.auth;\n        // Set useJWTAccessWithScope on the auth object.\n        this.auth.useJWTAccessWithScope = true;\n        // Set defaultServicePath on the auth object.\n        this.auth.defaultServicePath = this._servicePath;\n        // Set the default scopes in auth client if needed.\n        if (servicePath === this._servicePath) {\n            this.auth.defaultScopes = staticMembers.scopes;\n        }\n        this.locationsClient = new this._gaxModule.LocationsClient(this._gaxGrpc, opts);\n        // Determine the client header string.\n        const clientHeader = [`gax/${this._gaxModule.version}`, `gapic/${version}`];\n        if (typeof process === 'object' && 'versions' in process) {\n            clientHeader.push(`gl-node/${process.versions.node}`);\n        }\n        else {\n            clientHeader.push(`gl-web/${this._gaxModule.version}`);\n        }\n        if (!opts.fallback) {\n            clientHeader.push(`grpc/${this._gaxGrpc.grpcVersion}`);\n        }\n        else {\n            clientHeader.push(`rest/${this._gaxGrpc.grpcVersion}`);\n        }\n        if (opts.libName && opts.libVersion) {\n            clientHeader.push(`${opts.libName}/${opts.libVersion}`);\n        }\n        // Load the applicable protos.\n        this._protos = this._gaxGrpc.loadProtoJSON(jsonProtos);\n        // This API contains \"path templates\"; forward-slash-separated\n        // identifiers to uniquely identify resources within the API.\n        // Create useful helper objects for these.\n        this.pathTemplates = {\n            configPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/config'),\n            cryptoKeyPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}'),\n            cryptoKeyVersionPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/keyRings/{key_ring}/cryptoKeys/{crypto_key}/cryptoKeyVersions/{crypto_key_version}'),\n            customClassPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/customClasses/{custom_class}'),\n            locationPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}'),\n            phraseSetPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/phraseSets/{phrase_set}'),\n            projectPathTemplate: new this._gaxModule.PathTemplate('projects/{project}'),\n            recognizerPathTemplate: new this._gaxModule.PathTemplate('projects/{project}/locations/{location}/recognizers/{recognizer}'),\n        };\n        // Some of the methods on this service return \"paged\" results,\n        // (e.g. 50 results at a time, with tokens to get subsequent\n        // pages). Denote the keys used for pagination and results.\n        this.descriptors.page = {\n            listRecognizers: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'recognizers'),\n            listCustomClasses: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'customClasses'),\n            listPhraseSets: new this._gaxModule.PageDescriptor('pageToken', 'nextPageToken', 'phraseSets'),\n        };\n        // Some of the methods on this service provide streaming responses.\n        // Provide descriptors for these.\n        this.descriptors.stream = {\n            streamingRecognize: new this._gaxModule.StreamDescriptor(this._gaxModule.StreamType.BIDI_STREAMING, !!opts.fallback, !!opts.gaxServerStreamingRetries),\n        };\n        const protoFilesRoot = this._gaxModule.protobuf.Root.fromJSON(jsonProtos);\n        // This API contains \"long-running operations\", which return a\n        // an Operation object that allows for tracking of the operation,\n        // rather than holding a request open.\n        const lroOptions = {\n            auth: this.auth,\n            grpc: 'grpc' in this._gaxGrpc ? this._gaxGrpc.grpc : undefined,\n        };\n        if (opts.fallback) {\n            lroOptions.protoJson = protoFilesRoot;\n            lroOptions.httpRules = [\n                {\n                    selector: 'google.cloud.location.Locations.GetLocation',\n                    get: '/v2/{name=projects/*/locations/*}',\n                },\n                {\n                    selector: 'google.cloud.location.Locations.ListLocations',\n                    get: '/v2/{name=projects/*}/locations',\n                },\n                {\n                    selector: 'google.longrunning.Operations.CancelOperation',\n                    post: '/v2/{name=projects/*/locations/*/operations/*}:cancel',\n                    body: '*',\n                },\n                {\n                    selector: 'google.longrunning.Operations.DeleteOperation',\n                    delete: '/v2/{name=projects/*/locations/*/operations/*}',\n                },\n                {\n                    selector: 'google.longrunning.Operations.GetOperation',\n                    get: '/v2/{name=projects/*/locations/*/operations/*}',\n                },\n                {\n                    selector: 'google.longrunning.Operations.ListOperations',\n                    get: '/v2/{name=projects/*/locations/*}/operations',\n                },\n            ];\n        }\n        this.operationsClient = this._gaxModule\n            .lro(lroOptions)\n            .operationsClient(opts);\n        const createRecognizerResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.Recognizer');\n        const createRecognizerMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const updateRecognizerResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.Recognizer');\n        const updateRecognizerMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const deleteRecognizerResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.Recognizer');\n        const deleteRecognizerMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const undeleteRecognizerResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.Recognizer');\n        const undeleteRecognizerMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const batchRecognizeResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.BatchRecognizeResponse');\n        const batchRecognizeMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const createCustomClassResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.CustomClass');\n        const createCustomClassMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const updateCustomClassResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.CustomClass');\n        const updateCustomClassMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const deleteCustomClassResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.CustomClass');\n        const deleteCustomClassMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const undeleteCustomClassResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.CustomClass');\n        const undeleteCustomClassMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const createPhraseSetResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.PhraseSet');\n        const createPhraseSetMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const updatePhraseSetResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.PhraseSet');\n        const updatePhraseSetMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const deletePhraseSetResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.PhraseSet');\n        const deletePhraseSetMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        const undeletePhraseSetResponse = protoFilesRoot.lookup('.google.cloud.speech.v2.PhraseSet');\n        const undeletePhraseSetMetadata = protoFilesRoot.lookup('.google.cloud.speech.v2.OperationMetadata');\n        this.descriptors.longrunning = {\n            createRecognizer: new this._gaxModule.LongrunningDescriptor(this.operationsClient, createRecognizerResponse.decode.bind(createRecognizerResponse), createRecognizerMetadata.decode.bind(createRecognizerMetadata)),\n            updateRecognizer: new this._gaxModule.LongrunningDescriptor(this.operationsClient, updateRecognizerResponse.decode.bind(updateRecognizerResponse), updateRecognizerMetadata.decode.bind(updateRecognizerMetadata)),\n            deleteRecognizer: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deleteRecognizerResponse.decode.bind(deleteRecognizerResponse), deleteRecognizerMetadata.decode.bind(deleteRecognizerMetadata)),\n            undeleteRecognizer: new this._gaxModule.LongrunningDescriptor(this.operationsClient, undeleteRecognizerResponse.decode.bind(undeleteRecognizerResponse), undeleteRecognizerMetadata.decode.bind(undeleteRecognizerMetadata)),\n            batchRecognize: new this._gaxModule.LongrunningDescriptor(this.operationsClient, batchRecognizeResponse.decode.bind(batchRecognizeResponse), batchRecognizeMetadata.decode.bind(batchRecognizeMetadata)),\n            createCustomClass: new this._gaxModule.LongrunningDescriptor(this.operationsClient, createCustomClassResponse.decode.bind(createCustomClassResponse), createCustomClassMetadata.decode.bind(createCustomClassMetadata)),\n            updateCustomClass: new this._gaxModule.LongrunningDescriptor(this.operationsClient, updateCustomClassResponse.decode.bind(updateCustomClassResponse), updateCustomClassMetadata.decode.bind(updateCustomClassMetadata)),\n            deleteCustomClass: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deleteCustomClassResponse.decode.bind(deleteCustomClassResponse), deleteCustomClassMetadata.decode.bind(deleteCustomClassMetadata)),\n            undeleteCustomClass: new this._gaxModule.LongrunningDescriptor(this.operationsClient, undeleteCustomClassResponse.decode.bind(undeleteCustomClassResponse), undeleteCustomClassMetadata.decode.bind(undeleteCustomClassMetadata)),\n            createPhraseSet: new this._gaxModule.LongrunningDescriptor(this.operationsClient, createPhraseSetResponse.decode.bind(createPhraseSetResponse), createPhraseSetMetadata.decode.bind(createPhraseSetMetadata)),\n            updatePhraseSet: new this._gaxModule.LongrunningDescriptor(this.operationsClient, updatePhraseSetResponse.decode.bind(updatePhraseSetResponse), updatePhraseSetMetadata.decode.bind(updatePhraseSetMetadata)),\n            deletePhraseSet: new this._gaxModule.LongrunningDescriptor(this.operationsClient, deletePhraseSetResponse.decode.bind(deletePhraseSetResponse), deletePhraseSetMetadata.decode.bind(deletePhraseSetMetadata)),\n            undeletePhraseSet: new this._gaxModule.LongrunningDescriptor(this.operationsClient, undeletePhraseSetResponse.decode.bind(undeletePhraseSetResponse), undeletePhraseSetMetadata.decode.bind(undeletePhraseSetMetadata)),\n        };\n        // Put together the default options sent with requests.\n        this._defaults = this._gaxGrpc.constructSettings('google.cloud.speech.v2.Speech', gapicConfig, opts.clientConfig || {}, { 'x-goog-api-client': clientHeader.join(' ') });\n        // Set up a dictionary of \"inner API calls\"; the core implementation\n        // of calling the API is handled in `google-gax`, with this code\n        // merely providing the destination and request information.\n        this.innerApiCalls = {};\n        // Add a warn function to the client constructor so it can be easily tested.\n        this.warn = this._gaxModule.warn;\n    }\n    /**\n     * Initialize the client.\n     * Performs asynchronous operations (such as authentication) and prepares the client.\n     * This function will be called automatically when any class method is called for the\n     * first time, but if you need to initialize it before calling an actual method,\n     * feel free to call initialize() directly.\n     *\n     * You can await on this method if you want to make sure the client is initialized.\n     *\n     * @returns {Promise} A promise that resolves to an authenticated service stub.\n     */\n    initialize() {\n        // If the client stub promise is already initialized, return immediately.\n        if (this.speechStub) {\n            return this.speechStub;\n        }\n        // Put together the \"service stub\" for\n        // google.cloud.speech.v2.Speech.\n        this.speechStub = this._gaxGrpc.createStub(this._opts.fallback\n            ? this._protos.lookupService('google.cloud.speech.v2.Speech')\n            : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                this._protos.google.cloud.speech.v2.Speech, this._opts, this._providedCustomServicePath);\n        // Iterate over each of the methods that the service provides\n        // and create an API call method for each.\n        const speechStubMethods = [\n            'createRecognizer',\n            'listRecognizers',\n            'getRecognizer',\n            'updateRecognizer',\n            'deleteRecognizer',\n            'undeleteRecognizer',\n            'recognize',\n            'streamingRecognize',\n            'batchRecognize',\n            'getConfig',\n            'updateConfig',\n            'createCustomClass',\n            'listCustomClasses',\n            'getCustomClass',\n            'updateCustomClass',\n            'deleteCustomClass',\n            'undeleteCustomClass',\n            'createPhraseSet',\n            'listPhraseSets',\n            'getPhraseSet',\n            'updatePhraseSet',\n            'deletePhraseSet',\n            'undeletePhraseSet',\n        ];\n        for (const methodName of speechStubMethods) {\n            const callPromise = this.speechStub.then(stub => (...args) => {\n                if (this._terminated) {\n                    if (methodName in this.descriptors.stream) {\n                        const stream = new stream_1.PassThrough({ objectMode: true });\n                        setImmediate(() => {\n                            stream.emit('error', new this._gaxModule.GoogleError('The client has already been closed.'));\n                        });\n                        return stream;\n                    }\n                    return Promise.reject('The client has already been closed.');\n                }\n                const func = stub[methodName];\n                return func.apply(stub, args);\n            }, (err) => () => {\n                throw err;\n            });\n            const descriptor = this.descriptors.page[methodName] ||\n                this.descriptors.stream[methodName] ||\n                this.descriptors.longrunning[methodName] ||\n                undefined;\n            const apiCall = this._gaxModule.createApiCall(callPromise, this._defaults[methodName], descriptor, this._opts.fallback);\n            this.innerApiCalls[methodName] = apiCall;\n        }\n        return this.speechStub;\n    }\n    /**\n     * The DNS address for this API service.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get servicePath() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static servicePath is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'speech.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service - same as servicePath.\n     * @deprecated Use the apiEndpoint method of the client instance.\n     * @returns {string} The DNS address for this service.\n     */\n    static get apiEndpoint() {\n        if (typeof process === 'object' &&\n            typeof process.emitWarning === 'function') {\n            process.emitWarning('Static apiEndpoint is deprecated, please use the instance method instead.', 'DeprecationWarning');\n        }\n        return 'speech.googleapis.com';\n    }\n    /**\n     * The DNS address for this API service.\n     * @returns {string} The DNS address for this service.\n     */\n    get apiEndpoint() {\n        return this._servicePath;\n    }\n    get universeDomain() {\n        return this._universeDomain;\n    }\n    /**\n     * The port for this API service.\n     * @returns {number} The default port for this service.\n     */\n    static get port() {\n        return 443;\n    }\n    /**\n     * The scopes needed to make gRPC calls for every method defined\n     * in this service.\n     * @returns {string[]} List of default scopes.\n     */\n    static get scopes() {\n        return ['https://www.googleapis.com/auth/cloud-platform'];\n    }\n    /**\n     * Return the project ID used by this class.\n     * @returns {Promise} A promise that resolves to string containing the project ID.\n     */\n    getProjectId(callback) {\n        if (callback) {\n            this.auth.getProjectId(callback);\n            return;\n        }\n        return this.auth.getProjectId();\n    }\n    getRecognizer(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getRecognizer(request, options, callback);\n    }\n    recognize(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                recognizer: (_a = request.recognizer) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.recognize(request, options, callback);\n    }\n    getConfig(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getConfig(request, options, callback);\n    }\n    updateConfig(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'config.name': (_a = request.config.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateConfig(request, options, callback);\n    }\n    getCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getCustomClass(request, options, callback);\n    }\n    getPhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.getPhraseSet(request, options, callback);\n    }\n    /**\n     * Performs bidirectional streaming speech recognition: receive results while\n     * sending audio. This method is only available via the gRPC API (not REST).\n     *\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which is both readable and writable. It accepts objects\n     *   representing {@link protos.google.cloud.speech.v2.StreamingRecognizeRequest|StreamingRecognizeRequest} for write() method, and\n     *   will emit objects representing {@link protos.google.cloud.speech.v2.StreamingRecognizeResponse|StreamingRecognizeResponse} on 'data' event asynchronously.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#bi-directional-streaming | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.streaming_recognize.js</caption>\n     * region_tag:speech_v2_generated_Speech_StreamingRecognize_async\n     */\n    _streamingRecognize(options) {\n        this.initialize();\n        return this.innerApiCalls.streamingRecognize(null, options);\n    }\n    createRecognizer(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createRecognizer(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `createRecognizer()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.create_recognizer.js</caption>\n     * region_tag:speech_v2_generated_Speech_CreateRecognizer_async\n     */\n    async checkCreateRecognizerProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.createRecognizer, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    updateRecognizer(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'recognizer.name': (_a = request.recognizer.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateRecognizer(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `updateRecognizer()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.update_recognizer.js</caption>\n     * region_tag:speech_v2_generated_Speech_UpdateRecognizer_async\n     */\n    async checkUpdateRecognizerProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.updateRecognizer, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    deleteRecognizer(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteRecognizer(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `deleteRecognizer()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.delete_recognizer.js</caption>\n     * region_tag:speech_v2_generated_Speech_DeleteRecognizer_async\n     */\n    async checkDeleteRecognizerProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deleteRecognizer, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    undeleteRecognizer(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.undeleteRecognizer(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `undeleteRecognizer()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.undelete_recognizer.js</caption>\n     * region_tag:speech_v2_generated_Speech_UndeleteRecognizer_async\n     */\n    async checkUndeleteRecognizerProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.undeleteRecognizer, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    batchRecognize(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                recognizer: (_a = request.recognizer) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.batchRecognize(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `batchRecognize()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.batch_recognize.js</caption>\n     * region_tag:speech_v2_generated_Speech_BatchRecognize_async\n     */\n    async checkBatchRecognizeProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.batchRecognize, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    createCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createCustomClass(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `createCustomClass()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.create_custom_class.js</caption>\n     * region_tag:speech_v2_generated_Speech_CreateCustomClass_async\n     */\n    async checkCreateCustomClassProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.createCustomClass, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    updateCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'custom_class.name': (_a = request.customClass.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updateCustomClass(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `updateCustomClass()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.update_custom_class.js</caption>\n     * region_tag:speech_v2_generated_Speech_UpdateCustomClass_async\n     */\n    async checkUpdateCustomClassProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.updateCustomClass, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    deleteCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deleteCustomClass(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `deleteCustomClass()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.delete_custom_class.js</caption>\n     * region_tag:speech_v2_generated_Speech_DeleteCustomClass_async\n     */\n    async checkDeleteCustomClassProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deleteCustomClass, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    undeleteCustomClass(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.undeleteCustomClass(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `undeleteCustomClass()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.undelete_custom_class.js</caption>\n     * region_tag:speech_v2_generated_Speech_UndeleteCustomClass_async\n     */\n    async checkUndeleteCustomClassProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.undeleteCustomClass, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    createPhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.createPhraseSet(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `createPhraseSet()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.create_phrase_set.js</caption>\n     * region_tag:speech_v2_generated_Speech_CreatePhraseSet_async\n     */\n    async checkCreatePhraseSetProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.createPhraseSet, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    updatePhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                'phrase_set.name': (_a = request.phraseSet.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.updatePhraseSet(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `updatePhraseSet()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.update_phrase_set.js</caption>\n     * region_tag:speech_v2_generated_Speech_UpdatePhraseSet_async\n     */\n    async checkUpdatePhraseSetProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.updatePhraseSet, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    deletePhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.deletePhraseSet(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `deletePhraseSet()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.delete_phrase_set.js</caption>\n     * region_tag:speech_v2_generated_Speech_DeletePhraseSet_async\n     */\n    async checkDeletePhraseSetProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.deletePhraseSet, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    undeletePhraseSet(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                name: (_a = request.name) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.undeletePhraseSet(request, options, callback);\n    }\n    /**\n     * Check the status of the long running operation returned by `undeletePhraseSet()`.\n     * @param {String} name\n     *   The operation name that will be passed.\n     * @returns {Promise} - The promise which resolves to an object.\n     *   The decoded operation object has result and metadata field to get information from.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#long-running-operations | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.undelete_phrase_set.js</caption>\n     * region_tag:speech_v2_generated_Speech_UndeletePhraseSet_async\n     */\n    async checkUndeletePhraseSetProgress(name) {\n        const request = new this._gaxModule.operationsProtos.google.longrunning.GetOperationRequest({ name });\n        const [operation] = await this.operationsClient.getOperation(request);\n        const decodeOperation = new this._gaxModule.Operation(operation, this.descriptors.longrunning.undeletePhraseSet, this._gaxModule.createDefaultBackoffSettings());\n        return decodeOperation;\n    }\n    listRecognizers(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listRecognizers(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project and location of Recognizers to list. The expected\n     *   format is `projects/{project}/locations/{location}`.\n     * @param {number} request.pageSize\n     *   The maximum number of Recognizers to return. The service may return fewer\n     *   than this value. If unspecified, at most 5 Recognizers will be returned.\n     *   The maximum value is 100; values above 100 will be coerced to 100.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous\n     *   {@link protos.google.cloud.speech.v2.Speech.ListRecognizers|ListRecognizers} call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to\n     *   {@link protos.google.cloud.speech.v2.Speech.ListRecognizers|ListRecognizers} must match\n     *   the call that provided the page token.\n     * @param {boolean} request.showDeleted\n     *   Whether, or not, to show resources that have been deleted.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.speech.v2.Recognizer|Recognizer} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listRecognizersAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listRecognizersStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listRecognizers'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listRecognizers.createStream(this.innerApiCalls.listRecognizers, request, callSettings);\n    }\n    /**\n     * Equivalent to `listRecognizers`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project and location of Recognizers to list. The expected\n     *   format is `projects/{project}/locations/{location}`.\n     * @param {number} request.pageSize\n     *   The maximum number of Recognizers to return. The service may return fewer\n     *   than this value. If unspecified, at most 5 Recognizers will be returned.\n     *   The maximum value is 100; values above 100 will be coerced to 100.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous\n     *   {@link protos.google.cloud.speech.v2.Speech.ListRecognizers|ListRecognizers} call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to\n     *   {@link protos.google.cloud.speech.v2.Speech.ListRecognizers|ListRecognizers} must match\n     *   the call that provided the page token.\n     * @param {boolean} request.showDeleted\n     *   Whether, or not, to show resources that have been deleted.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.speech.v2.Recognizer|Recognizer}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.list_recognizers.js</caption>\n     * region_tag:speech_v2_generated_Speech_ListRecognizers_async\n     */\n    listRecognizersAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listRecognizers'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listRecognizers.asyncIterate(this.innerApiCalls['listRecognizers'], request, callSettings);\n    }\n    listCustomClasses(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listCustomClasses(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project and location of CustomClass resources to list. The\n     *   expected format is `projects/{project}/locations/{location}`.\n     * @param {number} request.pageSize\n     *   Number of results per requests. A valid page_size ranges from 0 to 100\n     *   inclusive. If the page_size is zero or unspecified, a page size of 5 will\n     *   be chosen. If the page size exceeds 100, it will be coerced down to 100.\n     *   Note that a call might return fewer results than the requested page size.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous\n     *   {@link protos.google.cloud.speech.v2.Speech.ListCustomClasses|ListCustomClasses} call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to\n     *   {@link protos.google.cloud.speech.v2.Speech.ListCustomClasses|ListCustomClasses} must\n     *   match the call that provided the page token.\n     * @param {boolean} request.showDeleted\n     *   Whether, or not, to show resources that have been deleted.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.speech.v2.CustomClass|CustomClass} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listCustomClassesAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listCustomClassesStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listCustomClasses'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listCustomClasses.createStream(this.innerApiCalls.listCustomClasses, request, callSettings);\n    }\n    /**\n     * Equivalent to `listCustomClasses`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project and location of CustomClass resources to list. The\n     *   expected format is `projects/{project}/locations/{location}`.\n     * @param {number} request.pageSize\n     *   Number of results per requests. A valid page_size ranges from 0 to 100\n     *   inclusive. If the page_size is zero or unspecified, a page size of 5 will\n     *   be chosen. If the page size exceeds 100, it will be coerced down to 100.\n     *   Note that a call might return fewer results than the requested page size.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous\n     *   {@link protos.google.cloud.speech.v2.Speech.ListCustomClasses|ListCustomClasses} call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to\n     *   {@link protos.google.cloud.speech.v2.Speech.ListCustomClasses|ListCustomClasses} must\n     *   match the call that provided the page token.\n     * @param {boolean} request.showDeleted\n     *   Whether, or not, to show resources that have been deleted.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.speech.v2.CustomClass|CustomClass}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.list_custom_classes.js</caption>\n     * region_tag:speech_v2_generated_Speech_ListCustomClasses_async\n     */\n    listCustomClassesAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listCustomClasses'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listCustomClasses.asyncIterate(this.innerApiCalls['listCustomClasses'], request, callSettings);\n    }\n    listPhraseSets(request, optionsOrCallback, callback) {\n        var _a;\n        request = request || {};\n        let options;\n        if (typeof optionsOrCallback === 'function' && callback === undefined) {\n            callback = optionsOrCallback;\n            options = {};\n        }\n        else {\n            options = optionsOrCallback;\n        }\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        this.initialize();\n        return this.innerApiCalls.listPhraseSets(request, options, callback);\n    }\n    /**\n     * Equivalent to `method.name.toCamelCase()`, but returns a NodeJS Stream object.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project and location of PhraseSet resources to list. The\n     *   expected format is `projects/{project}/locations/{location}`.\n     * @param {number} request.pageSize\n     *   The maximum number of PhraseSets to return. The service may return fewer\n     *   than this value. If unspecified, at most 5 PhraseSets will be returned.\n     *   The maximum value is 100; values above 100 will be coerced to 100.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous\n     *   {@link protos.google.cloud.speech.v2.Speech.ListPhraseSets|ListPhraseSets} call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to\n     *   {@link protos.google.cloud.speech.v2.Speech.ListPhraseSets|ListPhraseSets} must match\n     *   the call that provided the page token.\n     * @param {boolean} request.showDeleted\n     *   Whether, or not, to show resources that have been deleted.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Stream}\n     *   An object stream which emits an object representing {@link protos.google.cloud.speech.v2.PhraseSet|PhraseSet} on 'data' event.\n     *   The client library will perform auto-pagination by default: it will call the API as many\n     *   times as needed. Note that it can affect your quota.\n     *   We recommend using `listPhraseSetsAsync()`\n     *   method described below for async iteration which you can stop as needed.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     */\n    listPhraseSetsStream(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listPhraseSets'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listPhraseSets.createStream(this.innerApiCalls.listPhraseSets, request, callSettings);\n    }\n    /**\n     * Equivalent to `listPhraseSets`, but returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.parent\n     *   Required. The project and location of PhraseSet resources to list. The\n     *   expected format is `projects/{project}/locations/{location}`.\n     * @param {number} request.pageSize\n     *   The maximum number of PhraseSets to return. The service may return fewer\n     *   than this value. If unspecified, at most 5 PhraseSets will be returned.\n     *   The maximum value is 100; values above 100 will be coerced to 100.\n     * @param {string} request.pageToken\n     *   A page token, received from a previous\n     *   {@link protos.google.cloud.speech.v2.Speech.ListPhraseSets|ListPhraseSets} call.\n     *   Provide this to retrieve the subsequent page.\n     *\n     *   When paginating, all other parameters provided to\n     *   {@link protos.google.cloud.speech.v2.Speech.ListPhraseSets|ListPhraseSets} must match\n     *   the call that provided the page token.\n     * @param {boolean} request.showDeleted\n     *   Whether, or not, to show resources that have been deleted.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link protos.google.cloud.speech.v2.PhraseSet|PhraseSet}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example <caption>include:samples/generated/v2/speech.list_phrase_sets.js</caption>\n     * region_tag:speech_v2_generated_Speech_ListPhraseSets_async\n     */\n    listPhraseSetsAsync(request, options) {\n        var _a;\n        request = request || {};\n        options = options || {};\n        options.otherArgs = options.otherArgs || {};\n        options.otherArgs.headers = options.otherArgs.headers || {};\n        options.otherArgs.headers['x-goog-request-params'] =\n            this._gaxModule.routingHeader.fromParams({\n                parent: (_a = request.parent) !== null && _a !== void 0 ? _a : '',\n            });\n        const defaultCallSettings = this._defaults['listPhraseSets'];\n        const callSettings = defaultCallSettings.merge(options);\n        this.initialize();\n        return this.descriptors.page.listPhraseSets.asyncIterate(this.innerApiCalls['listPhraseSets'], request, callSettings);\n    }\n    /**\n     * Gets information about a location.\n     *\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.name\n     *   Resource name for the location.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html | CallOptions} for more details.\n     * @returns {Promise} - The promise which resolves to an array.\n     *   The first element of the array is an object representing {@link google.cloud.location.Location | Location}.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#regular-methods | documentation }\n     *   for more details and examples.\n     * @example\n     * ```\n     * const [response] = await client.getLocation(request);\n     * ```\n     */\n    getLocation(request, options, callback) {\n        return this.locationsClient.getLocation(request, options, callback);\n    }\n    /**\n     * Lists information about the supported locations for this service. Returns an iterable object.\n     *\n     * `for`-`await`-`of` syntax is used with the iterable to get response elements on-demand.\n     * @param {Object} request\n     *   The request object that will be sent.\n     * @param {string} request.name\n     *   The resource that owns the locations collection, if applicable.\n     * @param {string} request.filter\n     *   The standard list filter.\n     * @param {number} request.pageSize\n     *   The standard list page size.\n     * @param {string} request.pageToken\n     *   The standard list page token.\n     * @param {object} [options]\n     *   Call options. See {@link https://googleapis.dev/nodejs/google-gax/latest/interfaces/CallOptions.html|CallOptions} for more details.\n     * @returns {Object}\n     *   An iterable Object that allows {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | async iteration }.\n     *   When you iterate the returned iterable, each element will be an object representing\n     *   {@link google.cloud.location.Location | Location}. The API will be called under the hood as needed, once per the page,\n     *   so you can stop the iteration when you don't need more results.\n     *   Please see the {@link https://github.com/googleapis/gax-nodejs/blob/master/client-libraries.md#auto-pagination | documentation }\n     *   for more details and examples.\n     * @example\n     * ```\n     * const iterable = client.listLocationsAsync(request);\n     * for await (const response of iterable) {\n     *   // process response\n     * }\n     * ```\n     */\n    listLocationsAsync(request, options) {\n        return this.locationsClient.listLocationsAsync(request, options);\n    }\n    /**\n     * Gets the latest state of a long-running operation.  Clients can use this\n     * method to poll the operation result at intervals as recommended by the API\n     * service.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     *   e.g, timeout, retries, paginations, etc. See {@link\n     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n     *   for the details.\n     * @param {function(?Error, ?Object)=} callback\n     *   The function which will be called with the result of the API call.\n     *\n     *   The second parameter to the callback is an object representing\n     *   {@link google.longrunning.Operation | google.longrunning.Operation}.\n     * @return {Promise} - The promise which resolves to an array.\n     *   The first element of the array is an object representing\n     * {@link google.longrunning.Operation | google.longrunning.Operation}.\n     * The promise has a method named \"cancel\" which cancels the ongoing API call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * const name = '';\n     * const [response] = await client.getOperation({name});\n     * // doThingsWith(response)\n     * ```\n     */\n    getOperation(request, options, callback) {\n        return this.operationsClient.getOperation(request, options, callback);\n    }\n    /**\n     * Lists operations that match the specified filter in the request. If the\n     * server doesn't support this method, it returns `UNIMPLEMENTED`. Returns an iterable object.\n     *\n     * For-await-of syntax is used with the iterable to recursively get response element on-demand.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation collection.\n     * @param {string} request.filter - The standard list filter.\n     * @param {number=} request.pageSize -\n     *   The maximum number of resources contained in the underlying API\n     *   response. If page streaming is performed per-resource, this\n     *   parameter does not affect the return value. If page streaming is\n     *   performed per-page, this determines the maximum number of\n     *   resources in a page.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     *   e.g, timeout, retries, paginations, etc. See {@link\n     *   https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n     *   details.\n     * @returns {Object}\n     *   An iterable Object that conforms to {@link https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Iteration_protocols | iteration protocols}.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * for await (const response of client.listOperationsAsync(request));\n     * // doThingsWith(response)\n     * ```\n     */\n    listOperationsAsync(request, options) {\n        return this.operationsClient.listOperationsAsync(request, options);\n    }\n    /**\n     * Starts asynchronous cancellation on a long-running operation.  The server\n     * makes a best effort to cancel the operation, but success is not\n     * guaranteed.  If the server doesn't support this method, it returns\n     * `google.rpc.Code.UNIMPLEMENTED`.  Clients can use\n     * {@link Operations.GetOperation} or\n     * other methods to check whether the cancellation succeeded or whether the\n     * operation completed despite cancellation. On successful cancellation,\n     * the operation is not deleted; instead, it becomes an operation with\n     * an {@link Operation.error} value with a {@link google.rpc.Status.code} of\n     * 1, corresponding to `Code.CANCELLED`.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource to be cancelled.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     * e.g, timeout, retries, paginations, etc. See {@link\n     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions} for the\n     * details.\n     * @param {function(?Error)=} callback\n     *   The function which will be called with the result of the API call.\n     * @return {Promise} - The promise which resolves when API call finishes.\n     *   The promise has a method named \"cancel\" which cancels the ongoing API\n     * call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * await client.cancelOperation({name: ''});\n     * ```\n     */\n    cancelOperation(request, options, callback) {\n        return this.operationsClient.cancelOperation(request, options, callback);\n    }\n    /**\n     * Deletes a long-running operation. This method indicates that the client is\n     * no longer interested in the operation result. It does not cancel the\n     * operation. If the server doesn't support this method, it returns\n     * `google.rpc.Code.UNIMPLEMENTED`.\n     *\n     * @param {Object} request - The request object that will be sent.\n     * @param {string} request.name - The name of the operation resource to be deleted.\n     * @param {Object=} options\n     *   Optional parameters. You can override the default settings for this call,\n     * e.g, timeout, retries, paginations, etc. See {@link\n     * https://googleapis.github.io/gax-nodejs/global.html#CallOptions | gax.CallOptions}\n     * for the details.\n     * @param {function(?Error)=} callback\n     *   The function which will be called with the result of the API call.\n     * @return {Promise} - The promise which resolves when API call finishes.\n     *   The promise has a method named \"cancel\" which cancels the ongoing API\n     * call.\n     *\n     * @example\n     * ```\n     * const client = longrunning.operationsClient();\n     * await client.deleteOperation({name: ''});\n     * ```\n     */\n    deleteOperation(request, options, callback) {\n        return this.operationsClient.deleteOperation(request, options, callback);\n    }\n    // --------------------\n    // -- Path templates --\n    // --------------------\n    /**\n     * Return a fully-qualified config resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @returns {string} Resource name string.\n     */\n    configPath(project, location) {\n        return this.pathTemplates.configPathTemplate.render({\n            project: project,\n            location: location,\n        });\n    }\n    /**\n     * Parse the project from Config resource.\n     *\n     * @param {string} configName\n     *   A fully-qualified path representing Config resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromConfigName(configName) {\n        return this.pathTemplates.configPathTemplate.match(configName).project;\n    }\n    /**\n     * Parse the location from Config resource.\n     *\n     * @param {string} configName\n     *   A fully-qualified path representing Config resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromConfigName(configName) {\n        return this.pathTemplates.configPathTemplate.match(configName).location;\n    }\n    /**\n     * Return a fully-qualified cryptoKey resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} key_ring\n     * @param {string} crypto_key\n     * @returns {string} Resource name string.\n     */\n    cryptoKeyPath(project, location, keyRing, cryptoKey) {\n        return this.pathTemplates.cryptoKeyPathTemplate.render({\n            project: project,\n            location: location,\n            key_ring: keyRing,\n            crypto_key: cryptoKey,\n        });\n    }\n    /**\n     * Parse the project from CryptoKey resource.\n     *\n     * @param {string} cryptoKeyName\n     *   A fully-qualified path representing CryptoKey resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromCryptoKeyName(cryptoKeyName) {\n        return this.pathTemplates.cryptoKeyPathTemplate.match(cryptoKeyName)\n            .project;\n    }\n    /**\n     * Parse the location from CryptoKey resource.\n     *\n     * @param {string} cryptoKeyName\n     *   A fully-qualified path representing CryptoKey resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromCryptoKeyName(cryptoKeyName) {\n        return this.pathTemplates.cryptoKeyPathTemplate.match(cryptoKeyName)\n            .location;\n    }\n    /**\n     * Parse the key_ring from CryptoKey resource.\n     *\n     * @param {string} cryptoKeyName\n     *   A fully-qualified path representing CryptoKey resource.\n     * @returns {string} A string representing the key_ring.\n     */\n    matchKeyRingFromCryptoKeyName(cryptoKeyName) {\n        return this.pathTemplates.cryptoKeyPathTemplate.match(cryptoKeyName)\n            .key_ring;\n    }\n    /**\n     * Parse the crypto_key from CryptoKey resource.\n     *\n     * @param {string} cryptoKeyName\n     *   A fully-qualified path representing CryptoKey resource.\n     * @returns {string} A string representing the crypto_key.\n     */\n    matchCryptoKeyFromCryptoKeyName(cryptoKeyName) {\n        return this.pathTemplates.cryptoKeyPathTemplate.match(cryptoKeyName)\n            .crypto_key;\n    }\n    /**\n     * Return a fully-qualified cryptoKeyVersion resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} key_ring\n     * @param {string} crypto_key\n     * @param {string} crypto_key_version\n     * @returns {string} Resource name string.\n     */\n    cryptoKeyVersionPath(project, location, keyRing, cryptoKey, cryptoKeyVersion) {\n        return this.pathTemplates.cryptoKeyVersionPathTemplate.render({\n            project: project,\n            location: location,\n            key_ring: keyRing,\n            crypto_key: cryptoKey,\n            crypto_key_version: cryptoKeyVersion,\n        });\n    }\n    /**\n     * Parse the project from CryptoKeyVersion resource.\n     *\n     * @param {string} cryptoKeyVersionName\n     *   A fully-qualified path representing CryptoKeyVersion resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromCryptoKeyVersionName(cryptoKeyVersionName) {\n        return this.pathTemplates.cryptoKeyVersionPathTemplate.match(cryptoKeyVersionName).project;\n    }\n    /**\n     * Parse the location from CryptoKeyVersion resource.\n     *\n     * @param {string} cryptoKeyVersionName\n     *   A fully-qualified path representing CryptoKeyVersion resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromCryptoKeyVersionName(cryptoKeyVersionName) {\n        return this.pathTemplates.cryptoKeyVersionPathTemplate.match(cryptoKeyVersionName).location;\n    }\n    /**\n     * Parse the key_ring from CryptoKeyVersion resource.\n     *\n     * @param {string} cryptoKeyVersionName\n     *   A fully-qualified path representing CryptoKeyVersion resource.\n     * @returns {string} A string representing the key_ring.\n     */\n    matchKeyRingFromCryptoKeyVersionName(cryptoKeyVersionName) {\n        return this.pathTemplates.cryptoKeyVersionPathTemplate.match(cryptoKeyVersionName).key_ring;\n    }\n    /**\n     * Parse the crypto_key from CryptoKeyVersion resource.\n     *\n     * @param {string} cryptoKeyVersionName\n     *   A fully-qualified path representing CryptoKeyVersion resource.\n     * @returns {string} A string representing the crypto_key.\n     */\n    matchCryptoKeyFromCryptoKeyVersionName(cryptoKeyVersionName) {\n        return this.pathTemplates.cryptoKeyVersionPathTemplate.match(cryptoKeyVersionName).crypto_key;\n    }\n    /**\n     * Parse the crypto_key_version from CryptoKeyVersion resource.\n     *\n     * @param {string} cryptoKeyVersionName\n     *   A fully-qualified path representing CryptoKeyVersion resource.\n     * @returns {string} A string representing the crypto_key_version.\n     */\n    matchCryptoKeyVersionFromCryptoKeyVersionName(cryptoKeyVersionName) {\n        return this.pathTemplates.cryptoKeyVersionPathTemplate.match(cryptoKeyVersionName).crypto_key_version;\n    }\n    /**\n     * Return a fully-qualified customClass resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} custom_class\n     * @returns {string} Resource name string.\n     */\n    customClassPath(project, location, customClass) {\n        return this.pathTemplates.customClassPathTemplate.render({\n            project: project,\n            location: location,\n            custom_class: customClass,\n        });\n    }\n    /**\n     * Parse the project from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .project;\n    }\n    /**\n     * Parse the location from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .location;\n    }\n    /**\n     * Parse the custom_class from CustomClass resource.\n     *\n     * @param {string} customClassName\n     *   A fully-qualified path representing CustomClass resource.\n     * @returns {string} A string representing the custom_class.\n     */\n    matchCustomClassFromCustomClassName(customClassName) {\n        return this.pathTemplates.customClassPathTemplate.match(customClassName)\n            .custom_class;\n    }\n    /**\n     * Return a fully-qualified location resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @returns {string} Resource name string.\n     */\n    locationPath(project, location) {\n        return this.pathTemplates.locationPathTemplate.render({\n            project: project,\n            location: location,\n        });\n    }\n    /**\n     * Parse the project from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).project;\n    }\n    /**\n     * Parse the location from Location resource.\n     *\n     * @param {string} locationName\n     *   A fully-qualified path representing Location resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromLocationName(locationName) {\n        return this.pathTemplates.locationPathTemplate.match(locationName).location;\n    }\n    /**\n     * Return a fully-qualified phraseSet resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} phrase_set\n     * @returns {string} Resource name string.\n     */\n    phraseSetPath(project, location, phraseSet) {\n        return this.pathTemplates.phraseSetPathTemplate.render({\n            project: project,\n            location: location,\n            phrase_set: phraseSet,\n        });\n    }\n    /**\n     * Parse the project from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .project;\n    }\n    /**\n     * Parse the location from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .location;\n    }\n    /**\n     * Parse the phrase_set from PhraseSet resource.\n     *\n     * @param {string} phraseSetName\n     *   A fully-qualified path representing PhraseSet resource.\n     * @returns {string} A string representing the phrase_set.\n     */\n    matchPhraseSetFromPhraseSetName(phraseSetName) {\n        return this.pathTemplates.phraseSetPathTemplate.match(phraseSetName)\n            .phrase_set;\n    }\n    /**\n     * Return a fully-qualified project resource name string.\n     *\n     * @param {string} project\n     * @returns {string} Resource name string.\n     */\n    projectPath(project) {\n        return this.pathTemplates.projectPathTemplate.render({\n            project: project,\n        });\n    }\n    /**\n     * Parse the project from Project resource.\n     *\n     * @param {string} projectName\n     *   A fully-qualified path representing Project resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromProjectName(projectName) {\n        return this.pathTemplates.projectPathTemplate.match(projectName).project;\n    }\n    /**\n     * Return a fully-qualified recognizer resource name string.\n     *\n     * @param {string} project\n     * @param {string} location\n     * @param {string} recognizer\n     * @returns {string} Resource name string.\n     */\n    recognizerPath(project, location, recognizer) {\n        return this.pathTemplates.recognizerPathTemplate.render({\n            project: project,\n            location: location,\n            recognizer: recognizer,\n        });\n    }\n    /**\n     * Parse the project from Recognizer resource.\n     *\n     * @param {string} recognizerName\n     *   A fully-qualified path representing Recognizer resource.\n     * @returns {string} A string representing the project.\n     */\n    matchProjectFromRecognizerName(recognizerName) {\n        return this.pathTemplates.recognizerPathTemplate.match(recognizerName)\n            .project;\n    }\n    /**\n     * Parse the location from Recognizer resource.\n     *\n     * @param {string} recognizerName\n     *   A fully-qualified path representing Recognizer resource.\n     * @returns {string} A string representing the location.\n     */\n    matchLocationFromRecognizerName(recognizerName) {\n        return this.pathTemplates.recognizerPathTemplate.match(recognizerName)\n            .location;\n    }\n    /**\n     * Parse the recognizer from Recognizer resource.\n     *\n     * @param {string} recognizerName\n     *   A fully-qualified path representing Recognizer resource.\n     * @returns {string} A string representing the recognizer.\n     */\n    matchRecognizerFromRecognizerName(recognizerName) {\n        return this.pathTemplates.recognizerPathTemplate.match(recognizerName)\n            .recognizer;\n    }\n    /**\n     * Terminate the gRPC channel and close the client.\n     *\n     * The client will no longer be usable and all future behavior is undefined.\n     * @returns {Promise} A promise that resolves when the client is closed.\n     */\n    close() {\n        if (this.speechStub && !this._terminated) {\n            return this.speechStub.then(stub => {\n                this._terminated = true;\n                stub.close();\n                this.locationsClient.close();\n                this.operationsClient.close();\n            });\n        }\n        return Promise.resolve();\n    }\n}\nexports.SpeechClient = SpeechClient;\n//# sourceMappingURL=speech_client.js.map"],"mappings":"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/H,eAAe,CAACgL,kBAAkB,CAACnD,OAAO,EAAEE,OAAO,CAAC;EACpE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACImB,YAAYA,CAACrB,OAAO,EAAEE,OAAO,EAAEJ,QAAQ,EAAE;IACrC,OAAO,IAAI,CAAChF,gBAAgB,CAACuG,YAAY,CAACrB,OAAO,EAAEE,OAAO,EAAEJ,QAAQ,CAAC;EACzE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIsD,mBAAmBA,CAACpD,OAAO,EAAEE,OAAO,EAAE;IAClC,OAAO,IAAI,CAACpF,gBAAgB,CAACsI,mBAAmB,CAACpD,OAAO,EAAEE,OAAO,CAAC;EACtE;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACImD,eAAeA,CAACrD,OAAO,EAAEE,OAAO,EAAEJ,QAAQ,EAAE;IACxC,OAAO,IAAI,CAAChF,gBAAgB,CAACuI,eAAe,CAACrD,OAAO,EAAEE,OAAO,EAAEJ,QAAQ,CAAC;EAC5E;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACIwD,eAAeA,CAACtD,OAAO,EAAEE,OAAO,EAAEJ,QAAQ,EAAE;IACxC,OAAO,IAAI,CAAChF,gBAAgB,CAACwI,eAAe,CAACtD,OAAO,EAAEE,OAAO,EAAEJ,QAAQ,CAAC;EAC5E;EACA;EACA;EACA;EACA;AACJ;A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"},"metadata":{},"sourceType":"script","externalDependencies":[]}